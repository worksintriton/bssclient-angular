import swal from 'sweetalert2';
import { SweetAlertOptions } from 'sweetalert2';
export { SweetAlertOptions } from 'sweetalert2';
export declare class AlertService {
    static Texts: {
        successTitle: string;
        warningTitle: string;
        errorTitle: string;
    };
    /** Raw swal object to create advanced popups */
    readonly swal: typeof swal;
    /** Helper to process the various types of inputs */
    private processParams(options, p1, p2, p3?);
    successPopup(options: SweetAlertOptions): Promise<void>;
    successPopup(text: string, options?: SweetAlertOptions): Promise<void>;
    successPopup(title: string, text: string, options?: SweetAlertOptions): Promise<void>;
    warningConfirm(options: SweetAlertOptions): Promise<boolean>;
    warningConfirm(text: string, options?: SweetAlertOptions): Promise<boolean>;
    warningConfirm(title: string, text: string, options?: SweetAlertOptions): Promise<boolean>;
    errorPopup(options: SweetAlertOptions): Promise<void>;
    errorPopup(text: string, options?: SweetAlertOptions): Promise<void>;
    errorPopup(title: string, text: string, options?: SweetAlertOptions): Promise<void>;
    /** Text prompt wrapper */
    prompt(options: SweetAlertOptions): Promise<string | false>;
    prompt(text: string, options?: SweetAlertOptions): Promise<string | false>;
    prompt(title: string, text: string, options?: SweetAlertOptions): Promise<string | false>;
    /** Multiline text prompt wrapper */
    promptMultiline(options: SweetAlertOptions): Promise<string | false>;
    promptMultiline(text: string, options?: SweetAlertOptions): Promise<string | false>;
    promptMultiline(title: string, text: string, options?: SweetAlertOptions): Promise<string | false>;
    /** Number prompt wrapper */
    numberPrompt(options: SweetAlertOptions): Promise<number | false>;
    numberPrompt(text: string, options?: SweetAlertOptions): Promise<number | false>;
    numberPrompt(title: string, text: string, options?: SweetAlertOptions): Promise<number | false>;
}
/** Add this to your Angular2 module providers. It implements the `ClassProvider` interface */
export declare const AlertServiceProviderNg2: {
    provide: typeof AlertService;
    useClass: typeof AlertService;
};
