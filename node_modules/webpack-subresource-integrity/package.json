{
  "_args": [
    [
      {
        "raw": "webpack-subresource-integrity@^1.1.0-rc.4",
        "scope": null,
        "escapedName": "webpack-subresource-integrity",
        "name": "webpack-subresource-integrity",
        "rawSpec": "^1.1.0-rc.4",
        "spec": ">=1.1.0-rc.4 <2.0.0",
        "type": "range"
      },
      "/Users/mohammedimthiyas/Desktop/Client/node_modules/@angular-devkit/build-angular"
    ]
  ],
  "_from": "webpack-subresource-integrity@^1.1.0-rc.4",
  "_hasShrinkwrap": false,
  "_id": "webpack-subresource-integrity@1.1.0-rc.5",
  "_location": "/webpack-subresource-integrity",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/webpack-subresource-integrity_1.1.0-rc.5_1536568602692_0.4089661149289603"
  },
  "_npmUser": {
    "name": "jscheid",
    "email": "julians37@gmail.com"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "webpack-subresource-integrity@^1.1.0-rc.4",
    "scope": null,
    "escapedName": "webpack-subresource-integrity",
    "name": "webpack-subresource-integrity",
    "rawSpec": "^1.1.0-rc.4",
    "spec": ">=1.1.0-rc.4 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@angular-devkit/build-angular"
  ],
  "_resolved": "https://registry.npmjs.org/webpack-subresource-integrity/-/webpack-subresource-integrity-1.1.0-rc.5.tgz",
  "_shasum": "00e82648821175733b9af549127372ae71ff33ce",
  "_shrinkwrap": null,
  "_spec": "webpack-subresource-integrity@^1.1.0-rc.4",
  "_where": "/Users/mohammedimthiyas/Desktop/Client/node_modules/@angular-devkit/build-angular",
  "author": {
    "name": "Julian Scheid",
    "email": "julian@waysact.com"
  },
  "bugs": {
    "url": "https://github.com/waysact/webpack-subresource-integrity/issues"
  },
  "dependencies": {
    "webpack-core": "^0.6.8"
  },
  "description": "Webpack plugin for enabling Subresource Integrity",
  "devDependencies": {
    "babel-eslint": "^8.2.1",
    "bluebird": "^3.5.1",
    "check-node-version": "^3.2.0",
    "connect": "^3.6.6",
    "coveralls": "^3.0.0",
    "css-loader": "^0.28.0",
    "eslint": "^4.18.0",
    "eslint-config-airbnb-base": "^12.1.0",
    "eslint-config-prettier": "^2.9.0",
    "eslint-plugin-import": "^2.2.0",
    "expect": "^21.0.0",
    "extract-text-webpack-plugin": "^1.0.1",
    "file-loader": "^1.1.0",
    "get-port": "^3.2.0",
    "glob": "^7.1.1",
    "html-webpack-plugin": "^2.21.0",
    "htmlparser": "^1.7.7",
    "http-shutdown": "^1.2.0",
    "karma": "^1.3.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-firefox-launcher": "^1.0.0",
    "karma-mocha": "^1.0.1",
    "karma-webpack": "2.0.7",
    "lodash": "^4.17.5",
    "mini-css-extract-plugin": "^0.2.0",
    "mocha": "^5.0.1",
    "module-alias": "^2.0.6",
    "nyc": "^11.0.0",
    "prettier": "^1.10.2",
    "puppeteer": "^1.1.0",
    "rimraf": "^2.6.2",
    "serve-static": "^1.13.2",
    "soupselect": "^0.2.0",
    "style-loader": "^0.18.0",
    "tmp": "^0.0.31",
    "webpack": "^1.12.11"
  },
  "directories": {},
  "dist": {
    "shasum": "00e82648821175733b9af549127372ae71ff33ce",
    "tarball": "https://registry.npmjs.org/webpack-subresource-integrity/-/webpack-subresource-integrity-1.1.0-rc.5.tgz",
    "integrity": "sha512-pUlU358+futuHwICLLBmkIu1dnDqZqgNGOoeSO5Y8Uy4dvo54Rp4bBtUE323kFpS5MH61dVxBuP30n6jxlFoig==",
    "fileCount": 67,
    "unpackedSize": 36152,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbli0bCRA9TVsSAnZWagAAi0EP/RZy0cxZ0B7XQY6pCnii\noYuHhBbbkwKVQSHMam0JiSc8n5b2s5T7iu8Xi2dgMdlJ3g3j3gurqSpbniDg\nKyugnPjqkRj+F2twCraGjdNKIguK32/FBAnwkIC4Klyh0VG0LSBQN54KsE//\nOTo+ps4VcmVCvEXlWZRuOsgWJ0SKby+CSAKInyD58aM0ATVHyQqNLjJhpFFH\n/RtC5jK1TupBBinp6y3ox0C7vo9hMIb45N1x3bXC/gPgVhpLBg8k4g77vELA\n/8D7NkR3xioyFqv9wrN32TxnPmQvgSqpaJ/RJbFbp3k5oOQSFhPMWw2oGr6u\nojdP9v1LhbSgc/KVjvoQM9yOBmSHDOyYUs7RGe4r8rK7mwE2shPB9ye5OS2/\n8Py6fEy7AGkDh/A5EDmovGV72mqbwLq3vxiwUgfX/Nh4M00GT5TgUE+xNoli\nHOct3zkMbErmC6Z9OfGCiN2RI97qjdoshAt3kUbksvIvp6rlnx6AlzeUpEVm\nFH9U36nAhl5L6jSWRJommBSAt0J8xLKBv2BitJG7zJNz4Z+Tdbz+/ZQRRlu2\nn/B8Od4nlKF69SWunO/aXbN9G6EREOULWEc/nZVXwK1AaiZ10H1z3wEAssjz\nElGgq84e0RBIMniNSnL7A5wKIzOjXreMtrH6kIJAi+TiLpVSPvaZCojsISw4\noXIG\r\n=nOfU\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "LICENSE",
    "README.md",
    "CHANGELOG.md",
    "index.js",
    "util.js",
    "jmtp.js"
  ],
  "homepage": "https://github.com/waysact/webpack-subresource-integrity#readme",
  "keywords": [
    "webpack",
    "plugin",
    "sri",
    "subresource",
    "integrity",
    "html-webpack-plugin"
  ],
  "license": "MIT",
  "licenseText": "(The MIT License)\n\nCopyright (c) 2015-present Waysact Pty Ltd\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "main": "index",
  "maintainers": [
    {
      "name": "jscheid",
      "email": "julians37@gmail.com"
    }
  ],
  "name": "webpack-subresource-integrity",
  "nyc": {
    "exclude": [
      "coverage/**",
      "test/**",
      "examples/**",
      "**/node_modules/**"
    ]
  },
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^1.12.11 || ~2 || ~3 || ~4"
  },
  "prettier": {
    "singleQuote": true
  },
  "readme": "# webpack-subresource-integrity\n\n[![npm version](https://badge.fury.io/js/webpack-subresource-integrity.svg)](https://badge.fury.io/js/webpack-subresource-integrity) [![Travis Build Status](https://travis-ci.org/waysact/webpack-subresource-integrity.svg?branch=master)](https://travis-ci.org/waysact/webpack-subresource-integrity) [![Appveyor Build Status](https://ci.appveyor.com/api/projects/status/63bydfph00sghg18/branch/master?svg=true)](https://ci.appveyor.com/project/jscheid/webpack-subresource-integrity) [![Coverage Status](https://coveralls.io/repos/github/waysact/webpack-subresource-integrity/badge.svg?branch=master)](https://coveralls.io/github/waysact/webpack-subresource-integrity?branch=master) [![Code Climate](https://codeclimate.com/github/waysact/webpack-subresource-integrity/badges/gpa.svg)](https://codeclimate.com/github/waysact/webpack-subresource-integrity) [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/waysact/webpack-subresource-integrity/master/LICENSE)\n\nWebpack plugin for enabling Subresource Integrity.\n\n[Subresource Integrity](http://www.w3.org/TR/SRI/) (SRI) is a security\nfeature that enables browsers to verify that files they fetch (for\nexample, from a CDN) are delivered without unexpected\nmanipulation.\n\n## Features\n\n- Optional integration with [html-webpack-plugin](https://github.com/ampedandwired/html-webpack-plugin)\n- Automatic support for code splitting (integrity for lazy-loaded chunks)\n- Compatible with Webpack 1.x, 2.x, 3.x and 4.x\n\n## Installation\n\n```shell\nnpm install webpack-subresource-integrity --save-dev\n```\n\n### Webpack Configuration Example\n\n```javascript\nimport SriPlugin from 'webpack-subresource-integrity';\n\nconst compiler = webpack({\n    output: {\n        crossOriginLoading: 'anonymous',\n    },\n    plugins: [\n        new SriPlugin({\n            hashFuncNames: ['sha256', 'sha384'],\n            enabled: process.env.NODE_ENV === 'production',\n        }),\n    ],\n});\n```\n\n### Setting the `integrity` attribute for top-level assets\n\nFor the plugin to take effect it is **essential** that you set the\n`integrity` attribute for top-level assets (i.e. assets loaded by your\nHTML pages.)\n\n#### With HtmlWebpackPlugin\n\nWhen html-webpack-plugin is injecting assets into the template (the\ndefault), the `integrity` attribute will be set automatically.  The\n`crossorigin` attribute will be set as well, to the value of\n`output.crossOriginLoading` webpack option. There is nothing else to\nbe done.\n\n#### With HtmlWebpackPlugin({ inject: false })\n\nWhen you use html-webpack-plugin with `inject: false`, you are\nrequired to set the `integrity` and `crossorigin` attributes in your\ntemplate as follows:\n\n```ejs\n<% for (var index in htmlWebpackPlugin.files.js) { %>\n  <script\n     src=\"<%= htmlWebpackPlugin.files.js[index] %>\"\n     integrity=\"<%= htmlWebpackPlugin.files.jsIntegrity[index] %>\"\n     crossorigin=\"<%= webpackConfig.output.crossOriginLoading %>\"\n  ></script>\n<% } %>\n\n<% for (var index in htmlWebpackPlugin.files.css) { %>\n  <link\n     rel=\"stylesheet\"\n     href=\"<%= htmlWebpackPlugin.files.css[index] %>\"\n     integrity=\"<%= htmlWebpackPlugin.files.cssIntegrity[index] %>\"\n     crossorigin=\"<%= webpackConfig.output.crossOriginLoading %>\"\n  />\n<% } %>\n```\n\n#### Without HtmlWebpackPlugin\n\nThe correct value for the `integrity` attribute can be retrieved from\nthe `integrity` property of Webpack assets.  However, that property is\nnot copied over by Webpack's `stats` module so you'll have to access\nthe \"original\" asset on the `compilation` object.  For example:\n\n```javascript\ncompiler.plugin(\"done\", stats => {\n    const mainAssetName = stats.toJson().assetsByChunkName.main;\n    const integrity = stats.compilation.assets[mainAssetName].integrity;\n});\n```\n\nNote that you're also required to set the `crossorigin` attribute.  It\nis recommended to set this attribute to the same value as the webpack\n`output.crossOriginLoading` configuration option.\n\n### Web Server Configuration\n\nIf your page can be loaded through plain HTTP (as opposed to HTTPS),\nyou must set the `Cache-Control: no-transform` response header or your\npage will break when assets are loaded through a transforming\nproxy.  [See below](#proxies) for more information.\n\n### Options\n\n#### hashFuncNames\n\nRequired option, no default value.\n\nAn array of strings, each specifying the name of a hash function to be\nused for calculating integrity hash values.  For example, `['sha256',\n'sha512']`.\n\nSee [SRI: Cryptographic hash functions](http://www.w3.org/TR/SRI/#cryptographic-hash-functions)\n\n#### enabled\n\nDefault value: `true`\n\nWhen this value is falsy, the plugin doesn't run and no integrity\nvalues are calculated. It is recommended to disable the plugin in\ndevelopment mode.\n\n## Caveats\n\n### Proxies\n\nBy its very nature, SRI can cause your page to break when assets are\nmodified by a proxy.  This is because SRI doesn't distinguish between\nmalicious and benevolent modifications: any modification will prevent\nan asset from being loaded.\n\nNotably, this issue can arise when your page is loaded through\n[Chrome Data Saver](https://developer.chrome.com/multidevice/data-compression).\n\nThis is only a problem when your page can be loaded with plain HTTP,\nsince proxies are incapable of modifying encrypted HTTPS responses.\n\nPresumably, you're looking to use SRI because you're concerned about\nsecurity and thus your page is only served through HTTPS anyway.\nHowever, if you really need to use SRI and HTTP together, you should\nset the `Cache-Control: no-transform` response header.  This will\ninstruct all well-behaved proxies (including Chrome Data Saver) to\nrefrain from modifying the assets.\n\n### Browser support\n\nBrowser support for SRI is currently patchy.  Your page will still\nwork on browsers without support for SRI, but subresources won't be\nprotected from tampering.\n\nSee [Can I use Subresource Integrity?](http://caniuse.com/#feat=subresource-integrity)\n\n### Hot Reloading\n\nThis plugin can interfere with hot reloading and therefore should be\ndisabled when using tools such as `webpack-dev-server`. This shouldn't\nbe a problem because hot reloading is usually used only in development\nmode where SRI is not normally needed.\n\nFor testing SRI without setting up a full-blown web server, consider\nusing a tool such as [`http-server`](https://github.com/indexzero/http-server).\n\n### Safari and Assets that Require Cookies\n\nAs detailed in [Webpack Issue\n#6972](https://github.com/webpack/webpack/issues/6972), the\n`crossOrigin` attribute can break loading of assets in certain edge\ncases due to a bug in Safari. Since SRI requires the `crossOrigin`\nattribute to be set, you may run into this case even when source URL\nis same-origin with respect to the asset.\n\n## Further Reading\n\n- [MDN: Subresource Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity)\n\n## License\n\nCopyright (c) 2015-present Waysact Pty Ltd\n\nMIT (see [LICENSE](LICENSE))\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/waysact/webpack-subresource-integrity.git"
  },
  "scripts": {
    "codeclimate": "docker run --interactive --tty --rm --env CODECLIMATE_CODE=\"$PWD\" --volume \"$PWD\":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate",
    "coverage": "nyc $(npm bin)/mocha --exit --timeout 20000",
    "lint": "eslint .",
    "mocha": "mocha --exit --timeout 20000",
    "prettier": "prettier --write '**/*.js'",
    "test": "karma start --single-run && mocha --exit --timeout 20000"
  },
  "version": "1.1.0-rc.5"
}
