{
  "_args": [
    [
      {
        "raw": "ansi-colors@^3.0.0",
        "scope": null,
        "escapedName": "ansi-colors",
        "name": "ansi-colors",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "/Users/mohammedimthiyas/Desktop/Client/node_modules/webpack-log"
    ]
  ],
  "_from": "ansi-colors@>=3.0.0 <4.0.0",
  "_id": "ansi-colors@3.0.5",
  "_inCache": true,
  "_location": "/ansi-colors",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ansi-colors_3.0.5_1535081720069_0.5866437778269336"
  },
  "_npmUser": {
    "name": "jonschlinkert",
    "email": "github@sellside.com"
  },
  "_npmVersion": "6.4.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ansi-colors@^3.0.0",
    "scope": null,
    "escapedName": "ansi-colors",
    "name": "ansi-colors",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/webpack-log"
  ],
  "_resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-3.0.5.tgz",
  "_shasum": "cb9dc64993b64fd6945485f797fc3853137d9a7b",
  "_shrinkwrap": null,
  "_spec": "ansi-colors@^3.0.0",
  "_where": "/Users/mohammedimthiyas/Desktop/Client/node_modules/webpack-log",
  "author": {
    "name": "Brian Woodward",
    "url": "https://github.com/doowb"
  },
  "bugs": {
    "url": "https://github.com/doowb/ansi-colors/issues"
  },
  "contributors": [
    {
      "name": "Brian Woodward",
      "url": "https://twitter.com/doowb"
    },
    {
      "name": "Jason Schilling",
      "url": "https://sourecode.de"
    },
    {
      "name": "Jon Schlinkert",
      "url": "http://twitter.com/jonschlinkert"
    },
    {
      "name": "Jordan",
      "url": "https://github.com/Silic0nS0ldier"
    }
  ],
  "dependencies": {},
  "description": "Easily add ANSI colors to your text and symbols in the terminal. A faster drop-in replacement for chalk, kleur and turbocolor (without the dependencies and rendering bugs).",
  "devDependencies": {
    "gulp-format-md": "^1.0.0",
    "justified": "^1.0.1",
    "mocha": "^5.2.0",
    "text-table": "^0.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-VVjWpkfaphxUBFarydrQ3n26zX5nIK7hcbT3/ielrvwDDyBBjuh2vuSw1P9zkPq0cfqvdw7lkYHnu+OLSfIBsg==",
    "shasum": "cb9dc64993b64fd6945485f797fc3853137d9a7b",
    "tarball": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-3.0.5.tgz",
    "fileCount": 6,
    "unpackedSize": 20248,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbf3z4CRA9TVsSAnZWagAAP6AQAI86POg+uB77FJy26AZc\nK6n9Bb6BS+i8A+9M5WZLVg0fpAasThm15ubVdkoW/XORKijlPU1PTBeRY8At\noE+NFUlCtjdwCOC95YMLNoQVmFJjTdLlYEAE9kubgpfmXld9WCzjAUdQw7f3\nU0h0bbbCMfsNL8aTaubSFnBIeGGYjgJMClobp4gz7MJAaBI2C7eiFDto/5TU\nCB0leHfqg/UOq7Nn3LR5j0IWxgt7AFqz4ua0R28vDrXTR9k+ww/kZ9tnYtec\nhoAb9ohsAmKsMT1rHjsCVyJArL5po3F7r6zWlPDVX3bzWPztHj1TGU7UTU+l\nhdzycLKHOBQ6bMQRYxznVibZiB7LgIdpt8fv847y+dDdbefqN1iXUTTqi2iF\nA6cf3LtZ8sS4qwDcgls2sfVpL7OE+L85xrL6dg8z1cRBYsrZCB8IonmucB65\nHyNf7I+QJy1gjpvffBl/kZGP0eM8MX/fNQYSfU0Px3AJanLGjPlVjBFcwyli\ndD+3CuNJPq8XY72sBBFNuMPKv2lRFEs+5G8eEO8l1l/oYrsNR3XhQHA4w9GX\nVcHhY8TooLJJvs6oOllloxlSW4/LZhwWRBlpYKbBkLl3kz9P8u/cs7QgUyAx\nrvRToi9tceF9gBgME3NRt44yGv7Efy5jaLa0fe4QP9eOEmGCmw5RLGQObRqm\nTHdZ\r\n=pcXC\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "index.js",
    "symbols.js",
    "types/index.d.ts"
  ],
  "gitHead": "75892b04c9e64b67dd9d9810af680c7c1bfe5630",
  "homepage": "https://github.com/doowb/ansi-colors",
  "keywords": [
    "ansi",
    "bgblack",
    "bgBlack",
    "bgblue",
    "bgBlue",
    "bgcyan",
    "bgCyan",
    "bggreen",
    "bgGreen",
    "bgmagenta",
    "bgMagenta",
    "bgred",
    "bgRed",
    "bgwhite",
    "bgWhite",
    "bgyellow",
    "bgYellow",
    "black",
    "blue",
    "bold",
    "clorox",
    "colors",
    "cyan",
    "dim",
    "gray",
    "green",
    "grey",
    "hidden",
    "inverse",
    "italic",
    "kleur",
    "magenta",
    "red",
    "reset",
    "strikethrough",
    "turbocolor",
    "underline",
    "white",
    "yellow"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "doowb",
      "email": "brian.woodward@gmail.com"
    },
    {
      "name": "jonschlinkert",
      "email": "github@sellside.com"
    }
  ],
  "name": "ansi-colors",
  "optionalDependencies": {},
  "readme": "# ansi-colors [![NPM version](https://img.shields.io/npm/v/ansi-colors.svg?style=flat)](https://www.npmjs.com/package/ansi-colors) [![NPM monthly downloads](https://img.shields.io/npm/dm/ansi-colors.svg?style=flat)](https://npmjs.org/package/ansi-colors) [![NPM total downloads](https://img.shields.io/npm/dt/ansi-colors.svg?style=flat)](https://npmjs.org/package/ansi-colors) [![Linux Build Status](https://img.shields.io/travis/doowb/ansi-colors.svg?style=flat&label=Travis)](https://travis-ci.org/doowb/ansi-colors) [![Windows Build Status](https://img.shields.io/appveyor/ci/doowb/ansi-colors.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/doowb/ansi-colors)\n\n> Easily add ANSI colors to your text and symbols in the terminal. A faster drop-in replacement for chalk, kleur and turbocolor (without the dependencies and rendering bugs).\n\nPlease consider following this project's author, [Brian Woodward](https://github.com/doowb), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save ansi-colors\n```\n\n![image](https://user-images.githubusercontent.com/383994/39635445-8a98a3a6-4f8b-11e8-89c1-068c45d4fff8.png)\n\n## Why use this?\n\nansi-colors is _the fastest Node.js library for terminal styling_. A more performant drop-in replacement for chalk, with no dependencies.\n\n* _Blazing fast_ - fastest terminal styling library in node.js, 10-20x faster than chalk! (See [Beware of false claims!](#beware-of-false-claims))!\n\n* _Drop-in replacement_ for [chalk](https://github.com/chalk/chalk).\n* _No dependencies_ (Chalk has 7 dependencies in its tree!)\n\n* _Safe_ - Does not modify the `String.prototype` like [colors](https://github.com/Marak/colors.js).\n* Supports [nested colors](#nested-colors).\n* Supports [chained colors](#chained-colors).\n* [Toggle color support](#toggle-color-support) on or off.\n\n## Usage\n\n```js\nconst c = require('ansi-colors');\n\nconsole.log(c.red('This is a red string!'));\nconsole.log(c.green('This is a red string!'));\nconsole.log(c.cyan('This is a cyan string!'));\nconsole.log(c.yellow('This is a yellow string!'));\n```\n\n![image](https://user-images.githubusercontent.com/383994/39653848-a38e67da-4fc0-11e8-89ae-98c65ebe9dcf.png)\n\n### Chained colors\n\n```js\nconsole.log(c.bold.red('this is a bold red message'));\nconsole.log(c.bold.yellow.italic('this is a bold yellow italicized message'));\nconsole.log(c.green.bold.underline('this is a bold green underlined message'));\n```\n\n![image](https://user-images.githubusercontent.com/383994/39635780-7617246a-4f8c-11e8-89e9-05216cc54e38.png)\n\n### Nested colors\n\n```js\nconsole.log(c.yellow(`foo ${c.red.bold('red')} bar ${c.cyan('cyan')} baz`));\n```\n\n![image](https://user-images.githubusercontent.com/383994/39635817-8ed93d44-4f8c-11e8-8afd-8c3ea35f5fbe.png)\n\n### Toggle color support\n\nEasily enable/disable colors.\n\n```js\nconst c = require('ansi-colors');\n\n// disable colors manually\nc.enabled = false;\n\n// or use a library to automatically detect support\nc.enabled = require('color-support').stdout;\n\nconsole.log(c.red('I will only be colored red if the terminal supports colors'));\n```\n\n## Strip ANSI codes\n\nUse the `.unstyle` method to strip ANSI codes from a string.\n\n```js\nconsole.log(c.unstyle(c.blue.bold('foo bar baz')));\n//=> 'foo bar baz'\n```\n\n## Available styles\n\n**Note** that bright and bright-background colors are not always supported.\n\n| Colors | Background Colors | Bright Colors | Bright Background Colors | \n| --- | --- | --- | --- |\n| black | bgBlack | blackBright | bgBlackBright |\n| red | bgRed | redBright | bgRedBright |\n| green | bgGreen | greenBright | bgGreenBright |\n| yellow | bgYellow | yellowBright | bgYellowBright |\n| blue | bgBlue | blueBright | bgBlueBright |\n| magenta | bgMagenta | magentaBright | bgMagentaBright |\n| cyan | bgCyan | cyanBright | bgCyanBright |\n| white | bgWhite | whiteBright | bgWhiteBright |\n| gray |  |  |  |\n| grey |  |  |  |\n\n_(`gray` is the U.S. spelling, `grey` is more commonly used in the Canada and U.K.)_\n\n### Style modifiers\n\n* dim\n* **bold**\n\n* hidden\n* _italic_\n\n* underline\n* inverse\n* ~~strikethrough~~\n\n* reset\n\n## Performance\n\n**Libraries tested**\n\n* ansi-colors v3.0.4\n* chalk v2.4.1\n\n<details>\n<summary><strong>Beware of false claims!</strong></summary>\n\n### Kleur and turbocolor are buggy and incomplete\n\ntldr; kleur and turbocolor do not have parity with chalk or ansi-colors, and they fail too many of the unit tests to be included in our benchmarks.\n\nYou might have seen claims from [kleur](https://github.com/lukeed/kleur) or [turbocolor](https://github.com/jorgebucaran/turbocolor) that they are \"faster than ansi-colors\". Both libraries are unofficial forks of ansi-colors, and in an attempt to appear faster and differentiate from ansi-colors, _both libraries removed crucial code that was necessary for resetting chained colors_.\n\nTo illustrate the bug, simply do the following with `kleur` (as of v2.0.1):\n\n```js\nconst kleur = require('kleur');\nconst red = kleur.bold.underline.red;\nconsole.log(kleur.bold('I should be bold and white'));\n\nconst blue = kleur.underline.blue;\nconsole.log(kleur.underline('I should be underlined and white'));\n```\n\nSame with `turbocolor` (as of v2.4.5):\n\n```js\nconst turbocolor = require('turbocolor');\nconst red = turbocolor.bold.underline.red;\nconsole.log(turbocolor.bold('I should be bold and white'));\n\nconst blue = turbocolor.underline.blue;\nconsole.log(turbocolor.underline('I should be underlined and white'));\n```\n\nBoth libraries render the following:\n\n![image](https://user-images.githubusercontent.com/383994/44202955-7ee62100-a11b-11e8-8ee6-652dbde52911.png)\n\n**Other pitfalls**\n\nBeyond the aforementioned rendering bug, neither kleur nor turbocolor can be used as a drop-in replacement for chalk:\n\n* both libraries omit code that prevents background bleed around newlines (try doing `console.log(kleur.bgRed('foo\\nbar') + 'baz qux')` and `console.log(turbocolor.bgRed('foo\\nbar') + 'baz qux')`).\n* both libraries fail half of the ansi-colors unit tests (chalk passes them all)\n* neither library supports bright colors (chalk and ansi-colors do)\n* neither library supports bright-background colors (chalk and ansi-colors do)\n* turbocolor swaps bright-background colors for background colors. (surprise! turbocolor gives you unexpected colors in the terminal!)\n\n</details>\n\n### Mac\n\n> MacBook Pro, Intel Core i7, 2.3 GHz, 16 GB.\n\n**Load time**\n\nTime it takes to load the first time `require()` is called:\n\n* ansi-colors - `2.383ms`\n* chalk - `14.676ms`\n\n**Benchmarks**\n\n```\n# All Colors\n  ansi-colors x 171,138 ops/sec ±1.32% (91 runs sampled))\n  chalk x 9,140 ops/sec ±2.42% (82 runs sampled)))\n\n# Chained colors\n  ansi-colors x 20,009 ops/sec ±1.35% (90 runs sampled)\n  chalk x 1,951 ops/sec ±1.65% (79 runs sampled)\n\n# Nested colors\n  ansi-colors x 59,232 ops/sec ±1.11% (93 runs sampled)\n  chalk x 3,995 ops/sec ±2.04% (82 runs sampled)\n```\n\n### Windows\n\n> Windows 10, Intel Core i7-7700k CPU @ 4.2 GHz, 32 GB\n\n**Load time**\n\nTime it takes to load the first time `require()` is called:\n\n* ansi-colors - `1.494ms`\n* chalk - `11.523ms`\n\n**Benchmarks**\n\n```\n# All Colors\n  ansi-colors x 193,088 ops/sec ±0.51% (95 runs sampled))\n  chalk x 9,612 ops/sec ±3.31% (77 runs sampled)))\n\n# Chained colors\n  ansi-colors x 26,093 ops/sec ±1.13% (94 runs sampled)\n  chalk x 2,267 ops/sec ±2.88% (80 runs sampled))\n\n# Nested colors\n  ansi-colors x 67,747 ops/sec ±0.49% (93 runs sampled)\n  chalk x 4,446 ops/sec ±3.01% (82 runs sampled))\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [ansi-wrap](https://www.npmjs.com/package/ansi-wrap): Create ansi colors by passing the open and close codes. | [homepage](https://github.com/jonschlinkert/ansi-wrap \"Create ansi colors by passing the open and close codes.\")\n* [strip-color](https://www.npmjs.com/package/strip-color): Strip ANSI color codes from a string. No dependencies. | [homepage](https://github.com/jonschlinkert/strip-color \"Strip ANSI color codes from a string. No dependencies.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 35 | [doowb](https://github.com/doowb) |\n| 23 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 6 | [lukeed](https://github.com/lukeed) |\n| 2 | [Silic0nS0ldier](https://github.com/Silic0nS0ldier) |\n| 1 | [madhavarshney](https://github.com/madhavarshney) |\n| 1 | [chapterjason](https://github.com/chapterjason) |\n\n### Author\n\n**Brian Woodward**\n\n* [GitHub Profile](https://github.com/doowb)\n* [Twitter Profile](https://twitter.com/doowb)\n* [LinkedIn Profile](https://linkedin.com/in/woodwardbrian)\n\n### License\n\nCopyright © 2018, [Brian Woodward](https://github.com/doowb).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on August 23, 2018._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/doowb/ansi-colors.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "types": "./types/index.d.ts",
  "verb": {
    "toc": false,
    "layout": "default",
    "tasks": [
      "readme"
    ],
    "data": {
      "author": {
        "linkedin": "woodwardbrian",
        "twitter": "doowb"
      }
    },
    "plugins": [
      "gulp-format-md"
    ],
    "lint": {
      "reflinks": true
    },
    "related": {
      "list": [
        "ansi-wrap",
        "strip-color"
      ]
    },
    "reflinks": [
      "colors",
      "kleur",
      "supports-color",
      "turbocolor"
    ]
  },
  "version": "3.0.5"
}
