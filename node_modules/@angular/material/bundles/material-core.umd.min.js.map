{"version":3,"file":"material-core.umd.min.js","sources":["../../src/lib/core/testing/month-constants.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/disable-ripple.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/common-behaviors/initialized.ts","../../src/lib/core/datetime/date-adapter.ts","../../src/lib/core/datetime/native-date-adapter.ts","../../src/lib/core/ripple/ripple-renderer.ts","../../src/lib/core/option/option.ts","../../src/lib/core/animation/animation.ts","../../src/lib/core/datetime/date-formats.ts","../../src/lib/core/datetime/native-date-formats.ts","../../src/lib/core/datetime/index.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/gestures/gesture-config.ts","../../src/lib/core/line/line.ts","../../src/lib/core/ripple/ripple-ref.ts","../../src/lib/core/ripple/ripple.ts","../../src/lib/core/ripple/index.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n */\nexport const JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8,\n    OCT = 9, NOV = 10, DEC = 11;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n\n/** Injection token that configures whether the Material sanity checks are enabled. */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n\n/** @docs-private */\nexport function MATERIAL_SANITY_CHECKS_FACTORY(): boolean {\n  return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n  imports: [BidiModule],\n  exports: [BidiModule],\n})\nexport class MatCommonModule {\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n  private _hasDoneGlobalChecks = false;\n\n  /** Whether we've already checked for HammerJs availability. */\n  private _hasCheckedHammer = false;\n\n  /** Reference to the global `document` object. */\n  private _document = typeof document === 'object' && document ? document : null;\n\n  /** Reference to the global 'window' object. */\n  private _window = typeof window === 'object' && window ? window : null;\n\n  constructor(@Optional() @Inject(MATERIAL_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n      this._checkThemeIsPresent();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n\n  /** Whether any sanity checks are enabled */\n  private _areChecksEnabled(): boolean {\n    return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n  }\n\n  /** Whether the code is running in tests. */\n  private _isTestEnv() {\n    return this._window && (this._window['__karma__'] || this._window['jasmine']);\n  }\n\n  private _checkDoctypeIsDefined(): void {\n    if (this._document && !this._document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n\n  private _checkThemeIsPresent(): void {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (this._document && this._document.body && typeof getComputedStyle === 'function') {\n      const testElement = this._document.createElement('div');\n\n      testElement.classList.add('mat-theme-loaded-marker');\n      this._document.body.appendChild(testElement);\n\n      const computedStyle = getComputedStyle(testElement);\n\n      // In some situations the computed style of the test element can be null. For example in\n      // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n      if (computedStyle && computedStyle.display !== 'none') {\n        console.warn(\n          'Could not find Angular Material core theme. Most Material ' +\n          'components may not work as expected. For more info refer ' +\n          'to the theming guide: https://material.angular.io/guide/theming'\n        );\n      }\n\n      this._document.body.removeChild(testElement);\n    }\n  }\n\n  /** Checks whether HammerJS is available. */\n  _checkHammerIsAvailable(): void {\n    if (this._hasCheckedHammer || !this._window) {\n      return;\n    }\n\n    if (this._areChecksEnabled() && !this._window['Hammer']) {\n      console.warn(\n        'Could not find HammerJS. Certain Angular Material components may not work correctly.');\n    }\n    this._hasCheckedHammer = true;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  /** Whether the component is disabled. */\n  disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n/** Mixin to augment a directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    get disabled() { return this._disabled; }\n    set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {ElementRef} from '@angular/core';\n\n/** @docs-private */\nexport interface CanColor {\n  /** Theme color palette for the component. */\n  color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\n/** @docs-private */\nexport interface HasElementRef {\n  _elementRef: ElementRef;\n}\n\n/** Possible color palette values. */\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T, defaultColor?: ThemePalette): CanColorCtor & T {\n  return class extends base {\n    private _color: ThemePalette;\n\n    get color(): ThemePalette { return this._color; }\n    set color(value: ThemePalette) {\n      const colorPalette = value || defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisableRipple {\n  /** Whether ripples are disabled. */\n  disableRipple: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableRippleCtor = Constructor<CanDisableRipple>;\n\n/** Mixin to augment a directive with a `disableRipple` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T): CanDisableRippleCtor & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {CanDisable} from './disabled';\n\n\n/** @docs-private */\nexport interface HasTabIndex {\n  /** Tabindex of the component. */\n  tabIndex: number;\n}\n\n/** @docs-private */\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n/** Mixin to augment a directive with a `tabIndex` property. */\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n  return class extends base {\n    private _tabIndex: number = defaultTabIndex;\n\n    get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n    set tabIndex(value: number) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? value : defaultTabIndex;\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FormControl, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {Subject} from 'rxjs';\nimport {ErrorStateMatcher} from '../error/error-options';\nimport {Constructor} from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n  updateErrorState();\n  readonly stateChanges: Subject<void>;\n  errorState: boolean;\n  errorStateMatcher: ErrorStateMatcher;\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n  _parentFormGroup: FormGroupDirective;\n  _parentForm: NgForm;\n  _defaultErrorStateMatcher: ErrorStateMatcher;\n  ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n: CanUpdateErrorStateCtor & T {\n  return class extends base {\n    /** Whether the component is in an error state. */\n    errorState: boolean = false;\n\n    /**\n     * Stream that emits whenever the state of the input changes such that the wrapping\n     * `MatFormField` needs to run change detection.\n     */\n    readonly stateChanges = new Subject<void>();\n\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control as FormControl : null;\n      const newState = matcher.isErrorState(control, parent);\n\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable, Subscriber} from 'rxjs';\nimport {Constructor} from './constructor';\n\n\n/**\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\n * value once markInitialized has been called, which should be done during the ngOnInit function.\n * If the subscription is made after it has already been marked as initialized, then it will trigger\n * an emit immediately.\n * @docs-private\n */\nexport interface HasInitialized {\n  /** Stream that emits once during the directive/component's ngOnInit. */\n  initialized: Observable<void>;\n\n  /**\n   * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\n   * the directive has been initialized.\n   * @docs-private\n   */\n  _markInitialized: () => void;\n}\n\n/** @docs-private */\nexport type HasInitializedCtor = Constructor<HasInitialized>;\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nexport function mixinInitialized<T extends Constructor<{}>>(base: T):\n    HasInitializedCtor & T {\n  return class extends base {\n    /** Whether this directive has been marked as initialized. */\n    _isInitialized = false;\n\n    /**\n     * List of subscribers that subscribed before the directive was initialized. Should be notified\n     * during _markInitialized. Set to null after pending subscribers are notified, and should\n     * not expect to be populated after.\n     */\n    _pendingSubscribers: Subscriber<void>[] | null = [];\n\n    /**\n     * Observable stream that emits when the directive initializes. If already initialized, the\n     * subscriber is stored to be notified once _markInitialized is called.\n     */\n    initialized = new Observable<void>(subscriber => {\n      // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n      // when _markInitialized is called.\n      if (this._isInitialized) {\n        this._notifySubscriber(subscriber);\n      } else {\n        this._pendingSubscribers!.push(subscriber);\n      }\n    });\n\n    constructor(...args: any[]) { super(...args); }\n\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized(): void {\n      if (this._isInitialized) {\n        throw Error('This directive has already been marked as initialized and ' +\n            'should not be called twice.');\n      }\n\n      this._isInitialized = true;\n\n      this._pendingSubscribers!.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber: Subscriber<void>): void {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken, LOCALE_ID} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY,\n});\n\n/** @docs-private */\nexport function MAT_DATE_LOCALE_FACTORY(): string {\n  return inject(LOCALE_ID);\n}\n\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateAdapter<D> {\n  /** The locale to use for all dates. */\n  protected locale: any;\n\n  /** A stream that emits when the locale changes. */\n  get localeChanges(): Observable<void> { return this._localeChanges; }\n  protected _localeChanges = new Subject<void>();\n\n  /**\n   * Gets the year component of the given date.\n   * @param date The date to extract the year from.\n   * @returns The year component.\n   */\n  abstract getYear(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * @param date The date to extract the month from.\n   * @returns The month component (0-indexed, 0 = January).\n   */\n  abstract getMonth(date: D): number;\n\n  /**\n   * Gets the date of the month component of the given date.\n   * @param date The date to extract the date of the month from.\n   * @returns The month component (1-indexed, 1 = first of month).\n   */\n  abstract getDate(date: D): number;\n\n  /**\n   * Gets the day of the week component of the given date.\n   * @param date The date to extract the day of the week from.\n   * @returns The month component (0-indexed, 0 = Sunday).\n   */\n  abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Gets a list of names for the months.\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n   * @returns An ordered list of all month names, starting with January.\n   */\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets a list of names for the dates of the month.\n   * @returns An ordered list of all date of the month names, starting with '1'.\n   */\n  abstract getDateNames(): string[];\n\n  /**\n   * Gets a list of names for the days of the week.\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n   * @returns An ordered list of all weekday names, starting with Sunday.\n   */\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets the name for the year of the given date.\n   * @param date The date to get the year name for.\n   * @returns The name of the given year (e.g. '2017').\n   */\n  abstract getYearName(date: D): string;\n\n  /**\n   * Gets the first day of the week.\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\n   */\n  abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Gets the number of days in the month of the given date.\n   * @param date The date whose month should be checked.\n   * @returns The number of days in the month of the given date.\n   */\n  abstract getNumDaysInMonth(date: D): number;\n\n  /**\n   * Clones the given date.\n   * @param date The date to clone\n   * @returns A new date equal to the given date.\n   */\n  abstract clone(date: D): D;\n\n  /**\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n   * month and date.\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n   * @returns The new date, or null if invalid.\n   */\n  abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Gets today's date.\n   * @returns Today's date.\n   */\n  abstract today(): D;\n\n  /**\n   * Parses a date from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   * @returns The parsed date.\n   */\n  abstract parse(value: any, parseFormat: any): D | null;\n\n  /**\n   * Formats a date as a string according to the given format.\n   * @param date The value to format.\n   * @param displayFormat The format to use to display the date as a string.\n   * @returns The formatted date string.\n   */\n  abstract format(date: D, displayFormat: any): string;\n\n  /**\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n   * calendar for each year and then finding the closest date in the new month. For example when\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n   * @param date The date to add years to.\n   * @param years The number of years to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of years added.\n   */\n  abstract addCalendarYears(date: D, years: number): D;\n\n  /**\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\n   * calendar for each month and then finding the closest date in the new month. For example when\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n   * @param date The date to add months to.\n   * @param months The number of months to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of months added.\n   */\n  abstract addCalendarMonths(date: D, months: number): D;\n\n  /**\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\n   * calendar for each day.\n   * @param date The date to add days to.\n   * @param days The number of days to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of days added.\n   */\n  abstract addCalendarDays(date: D, days: number): D;\n\n  /**\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n   * This method is used to generate date strings that are compatible with native HTML attributes\n   * such as the `min` or `max` attribute of an `<input>`.\n   * @param date The date to get the ISO date string for.\n   * @returns The ISO date string date string.\n   */\n  abstract toIso8601(date: D): string;\n\n  /**\n   * Checks whether the given object is considered a date instance by this DateAdapter.\n   * @param obj The object to check\n   * @returns Whether the object is a date instance.\n   */\n  abstract isDateInstance(obj: any): boolean;\n\n  /**\n   * Checks whether the given date is valid.\n   * @param date The date to check.\n   * @returns Whether the date is valid.\n   */\n  abstract isValid(date: D): boolean;\n\n  /**\n   * Gets date instance that is not valid.\n   * @returns An invalid date.\n   */\n  abstract invalid(): D;\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value: any): D | null {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale: any) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nconst SUPPORTS_INTL_API = typeof Intl != 'undefined';\n\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n@Injectable()\nexport class NativeDateAdapter extends DateAdapter<Date> {\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n  private readonly _clampDate: boolean;\n\n  /**\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n   * will produce `'8/13/1800'`.\n   *\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n   * getting the string representation of a Date object from it's utc representation. We're keeping\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\n   * though.\n   */\n  useUtcForDisplay: boolean = true;\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, platform: Platform) {\n    super();\n    super.setLocale(matDateLocale);\n\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\n      return range(12, i =>\n          this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\n      return range(7, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date: Date): Date {\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = {...displayFormat, timeZone: 'utc'};\n\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value: any): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number) {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\n    const d = new Date(Date.UTC(\n        date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\n        date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    return dtf.format(d);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, NgZone} from '@angular/core';\nimport {Platform, supportsPassiveEventListeners} from '@angular/cdk/platform';\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {RippleRef, RippleState} from './ripple-ref';\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  persistent?: boolean;\n  animation?: RippleAnimationConfig;\n  terminateOnPointerUp?: boolean;\n  /**\n   * @deprecated Use the `animation` property instead.\n   * @breaking-change 7.0.0\n   */\n  speedFactor?: number;\n};\n\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n */\nexport interface RippleAnimationConfig {\n  /** Duration in milliseconds for the enter animation (expansion from point of contact). */\n  enterDuration?: number;\n  /** Duration in milliseconds for the exit animation (fade-out). */\n  exitDuration?: number;\n}\n\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * @docs-private\n */\nexport interface RippleTarget {\n  /** Configuration for ripples that are launched on pointer down. */\n  rippleConfig: RippleConfig;\n  /** Whether ripples on pointer down should be disabled. */\n  rippleDisabled: boolean;\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nexport const defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nexport class RippleRenderer {\n  /** Element where the ripples are being added to. */\n  private _containerElement: HTMLElement;\n\n  /** Element which triggers the ripple elements on mouse events. */\n  private _triggerElement: HTMLElement | null;\n\n  /** Whether the pointer is currently down or not. */\n  private _isPointerDown = false;\n\n  /** Events to be registered on the trigger element. */\n  private _triggerEvents = new Map<string, any>();\n\n  /** Set of currently active ripple references. */\n  private _activeRipples = new Set<RippleRef>();\n\n  /** Latest non-persistent ripple that was triggered. */\n  private _mostRecentTransientRipple: RippleRef | null;\n\n  /** Time in milliseconds when the last touchstart event happened. */\n  private _lastTouchStartEvent: number;\n\n  /** Options that apply to all the event listeners that are bound by the renderer. */\n  private _eventOptions = supportsPassiveEventListeners() ? ({passive: true} as any) : false;\n\n  /**\n   * Cached dimensions of the ripple container. Set when the first\n   * ripple is shown and cleared once no more ripples are visible.\n   */\n  private _containerRect: ClientRect | null;\n\n  constructor(private _target: RippleTarget,\n              private _ngZone: NgZone,\n              elementRef: ElementRef<HTMLElement>,\n              platform: Platform) {\n\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement;\n\n      // Specify events which need to be registered on the trigger.\n      this._triggerEvents\n        .set('mousedown', this.onMousedown)\n        .set('mouseup', this.onPointerUp)\n        .set('mouseleave', this.onPointerUp)\n\n        .set('touchstart', this.onTouchStart)\n        .set('touchend', this.onPointerUp)\n        .set('touchcancel', this.onPointerUp);\n    }\n  }\n\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x: number, y: number, config: RippleConfig = {}): RippleRef {\n    const containerRect = this._containerRect =\n                          this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = {...defaultRippleAnimationConfig, ...config.animation};\n\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const duration = animationConfig.enterDuration / (config.speedFactor || 1);\n\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color || null;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this.runTimeoutOutsideZone(() => {\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n\n      rippleRef.state = RippleState.VISIBLE;\n\n      // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef: RippleRef) {\n    const wasActive = this._activeRipples.delete(rippleRef);\n\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\n    if (!wasActive) {\n      return;\n    }\n\n    const rippleEl = rippleRef.element;\n    const animationConfig = {...defaultRippleAnimationConfig, ...rippleRef.config.animation};\n\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN;\n      rippleEl.parentNode!.removeChild(rippleEl);\n    }, animationConfig.exitDuration);\n  }\n\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(element: HTMLElement) {\n    if (!element || element === this._triggerElement) {\n      return;\n    }\n\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n\n    this._ngZone.runOutsideAngular(() => {\n      this._triggerEvents.forEach((fn, type) =>\n          element.addEventListener(type, fn, this._eventOptions));\n    });\n\n    this._triggerElement = element;\n  }\n\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  private onMousedown = (event: MouseEvent) => {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent &&\n        Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using touch. */\n  private onTouchStart = (event: TouchEvent) => {\n    if (!this._target.rippleDisabled) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n\n      for (let i = 0; i < touches.length; i++) {\n        this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n      }\n    }\n  }\n\n  /** Function being called whenever the trigger is being released. */\n  private onPointerUp = () => {\n    if (!this._isPointerDown) {\n      return;\n    }\n\n    this._isPointerDown = false;\n\n    // Fade-out all ripples that are visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === RippleState.VISIBLE ||\n        ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n  private runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => {\n        this._triggerElement!.removeEventListener(type, fn, this._eventOptions);\n      });\n    }\n  }\n}\n\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {MatOptgroup} from './optgroup';\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by MatOption when selected or deselected. */\nexport class MatOptionSelectionChange {\n  constructor(\n    /** Reference to the option that emitted the event. */\n    public source: MatOption,\n    /** Whether the change in the option's value was a result of a user action. */\n    public isUserInput = false) { }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface MatOptionParentComponent {\n  disableRipple?: boolean;\n  multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MAT_OPTION_PARENT_COMPONENT =\n    new InjectionToken<MatOptionParentComponent>('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-option',\n  exportAs: 'matOption',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.mat-selected]': 'selected',\n    '[class.mat-option-multiple]': 'multiple',\n    '[class.mat-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    'class': 'mat-option',\n  },\n  styleUrls: ['option.css'],\n  templateUrl: 'option.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatOption implements AfterViewChecked, OnDestroy {\n  private _selected = false;\n  private _active = false;\n  private _disabled = false;\n  private _mostRecentViewValue = '';\n\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() { return this._parent && this._parent.multiple; }\n\n  /** Whether or not the option is currently selected. */\n  get selected(): boolean { return this._selected; }\n\n  /** The form value of the option. */\n  @Input() value: any;\n\n  /** The unique ID of the option. */\n  @Input() id: string = `mat-option-${_uniqueIdCounter++}`;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() { return this._parent && this._parent.disableRipple; }\n\n  /** Event emitted when the option is selected or deselected. */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onSelectionChange = new EventEmitter<MatOptionSelectionChange>();\n\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  readonly _stateChanges = new Subject<void>();\n\n  constructor(\n    private _element: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(MAT_OPTION_PARENT_COMPONENT) private _parent: MatOptionParentComponent,\n    @Optional() readonly group: MatOptgroup) {}\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue(): string {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n\n  /** Selects the option. */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Sets focus onto this option. */\n  focus(): void {\n    const element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    return this.viewValue;\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Gets the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MatOption>,\n  optionGroups: QueryList<MatOptgroup>): number {\n\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(optionIndex: number, optionHeight: number,\n    currentScrollPosition: number, panelHeight: number): number {\n  const optionOffset = optionIndex * optionHeight;\n\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport class AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\n\n/** @docs-private */\nexport class AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n\nexport type MatDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatDateFormats} from './date-formats';\n\n\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {MAT_DATE_FORMATS} from './date-formats';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\n\nexport * from './date-adapter';\nexport * from './date-formats';\nexport * from './native-date-adapter';\nexport * from './native-date-formats';\n\n\n@NgModule({\n  imports: [PlatformModule],\n  providers: [\n    {provide: DateAdapter, useClass: NativeDateAdapter},\n  ],\n})\nexport class NativeDateModule {}\n\n\n@NgModule({\n  imports: [NativeDateModule],\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\n})\nexport class MatNativeDateModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {FormGroupDirective, NgForm, FormControl} from '@angular/forms';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n  }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({providedIn: 'root'})\nexport class ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken, Inject, Optional} from '@angular/core';\nimport {HammerGestureConfig} from '@angular/platform-browser';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {\n  HammerStatic,\n  HammerInstance,\n  Recognizer,\n  RecognizerStatic,\n  HammerOptions,\n} from './gesture-annotations';\n\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n */\nexport const MAT_HAMMER_OPTIONS = new InjectionToken<HammerOptions>('MAT_HAMMER_OPTIONS');\n\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n  'longpress',\n  'slide',\n  'slidestart',\n  'slideend',\n  'slideright',\n  'slideleft'\n];\n\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n */\nconst noopHammerInstance: HammerInstance = {\n  on: () => {},\n  off: () => {},\n};\n\n/** Adjusts configuration of our gesture library, Hammer. */\n@Injectable()\nexport class GestureConfig extends HammerGestureConfig {\n  /** List of new event names to add to the gesture support list */\n  events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n\n  constructor(\n    @Optional() @Inject(MAT_HAMMER_OPTIONS) private _hammerOptions?: HammerOptions,\n    @Optional() commonModule?: MatCommonModule) {\n    super();\n    if (commonModule) {\n      commonModule._checkHammerIsAvailable();\n    }\n  }\n\n  /**\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n   *\n   * Our gesture names come from the Material Design gestures spec:\n   * https://material.io/design/#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in Hammer docs:\n   * http://hammerjs.github.io/recognizer-pan/\n   * http://hammerjs.github.io/recognizer-press/\n   *\n   * @param element Element to which to assign the new HammerJS gestures.\n   * @returns Newly-created HammerJS instance.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const hammer: HammerStatic = typeof window !== 'undefined' ? (window as any).Hammer : null;\n\n    if (!hammer) {\n      // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n      // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n      // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n      // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n      // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n      // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n      // undefined).\n      // @breaking-change 7.0.0\n      return noopHammerInstance;\n    }\n\n    const mc = new hammer(element, this._hammerOptions || undefined);\n\n    // Default Hammer Recognizers.\n    const pan = new hammer.Pan();\n    const swipe = new hammer.Swipe();\n    const press = new hammer.Press();\n\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous `recognizeWith` will be dropped.\n    // TODO: Confirm threshold numbers with Material Design UX Team\n    const slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\n    const longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\n\n    // Overwrite the default `pan` event to use the swipe event.\n    pan.recognizeWith(swipe);\n\n    // Since the slide event threshold is set to zero, the slide recognizer can fire and\n    // accidentally reset the longpress recognizer. In order to make sure that the two\n    // recognizers can run simultaneously but don't affect each other, we allow the slide\n    // recognizer to recognize while a longpress is being processed.\n    // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n    longpress.recognizeWith(slide);\n\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n\n    return mc as HammerInstance;\n  }\n\n  /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\n  private _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\n    let recognizer = new (base.constructor as RecognizerStatic)(options);\n\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n\n    return recognizer;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  NgModule,\n  Directive,\n  ElementRef,\n  QueryList,\n} from '@angular/core';\nimport {MatCommonModule} from '../common-behaviors/common-module';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n  selector: '[mat-line], [matLine]',\n  host: {'class': 'mat-line'}\n})\nexport class MatLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class MatLineSetter {\n  constructor(private _lines: QueryList<MatLine>, private _element: ElementRef<HTMLElement>) {\n    this._setLineClass(this._lines.length);\n\n    this._lines.changes.subscribe(() => {\n      this._setLineClass(this._lines.length);\n    });\n  }\n\n  private _setLineClass(count: number): void {\n    this._resetClasses();\n    if (count === 2 || count === 3) {\n      this._setClass(`mat-${count}-line`, true);\n    } else if (count > 3) {\n      this._setClass(`mat-multi-line`, true);\n    }\n  }\n\n  private _resetClasses(): void {\n    this._setClass('mat-2-line', false);\n    this._setClass('mat-3-line', false);\n    this._setClass('mat-multi-line', false);\n  }\n\n  private _setClass(className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this._element.nativeElement.classList.add(className);\n    } else {\n      this._element.nativeElement.classList.remove(className);\n    }\n  }\n\n}\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatLine, MatCommonModule],\n  declarations: [MatLine],\n})\nexport class MatLineModule { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\n\n/** Possible states for a ripple element. */\nexport enum RippleState {\n  FADING_IN, VISIBLE, FADING_OUT, HIDDEN\n}\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n\n  /** Current state of the ripple. */\n  state: RippleState = RippleState.HIDDEN;\n\n  constructor(\n    private _renderer: RippleRenderer,\n    /** Reference to the ripple HTML element. */\n    public element: HTMLElement,\n    /** Ripple configuration used for the ripple. */\n    public config: RippleConfig) {\n  }\n\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {RippleRef} from './ripple-ref';\nimport {RippleAnimationConfig, RippleConfig, RippleRenderer, RippleTarget} from './ripple-renderer';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/** Configurable options for `matRipple`. */\nexport interface RippleGlobalOptions {\n  /**\n   * Whether ripples should be disabled. Ripples can be still launched manually by using\n   * the `launch()` method. Therefore focus indicators will still show up.\n   */\n  disabled?: boolean;\n\n  /**\n   * Configuration for the animation duration of the ripples. There are two phases with different\n   * durations for the ripples. The animation durations will be overwritten if the\n   * `NoopAnimationsModule` is being used.\n   */\n  animation?: RippleAnimationConfig;\n\n  /**\n   * If set, the default duration of the fade-in animation is divided by this value. For example,\n   * setting it to 0.5 will cause the ripple fade-in animation to take twice as long.\n   * A changed speedFactor will not affect the fade-out duration of the ripples.\n   * @deprecated Use the `animation` global option instead.\n   * @breaking-change 7.0.0\n   */\n  baseSpeedFactor?: number;\n\n  /**\n   * Whether ripples should start fading out immediately after the mouse our touch is released. By\n   * default, ripples will wait for the enter animation to complete and for mouse or touch release.\n   */\n  terminateOnPointerUp?: boolean;\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nexport const MAT_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('mat-ripple-global-options');\n\n@Directive({\n  selector: '[mat-ripple], [matRipple]',\n  exportAs: 'matRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n})\nexport class MatRipple implements OnInit, OnDestroy, RippleTarget {\n\n  /** Custom color for all ripples. */\n  @Input('matRippleColor') color: string;\n\n  /** Whether the ripples should be visible outside the component's bounds. */\n  @Input('matRippleUnbounded') unbounded: boolean;\n\n  /**\n   * Whether the ripple always originates from the center of the host element's bounds, rather\n   * than originating from the location of the click event.\n   */\n  @Input('matRippleCentered') centered: boolean;\n\n  /**\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\n   * bounding rectangle.\n   */\n  @Input('matRippleRadius') radius: number = 0;\n\n  /**\n   * If set, the normal duration of ripple animations is divided by this value. For example,\n   * setting it to 0.5 will cause the animations to take twice as long.\n   * A changed speedFactor will not modify the fade-out duration of the ripples.\n   * @deprecated Use the [matRippleAnimation] binding instead.\n   * @breaking-change 7.0.0\n   */\n  @Input('matRippleSpeedFactor') speedFactor: number = 1;\n\n  /**\n   * Configuration for the ripple animation. Allows modifying the enter and exit animation\n   * duration of the ripples. The animation durations will be overwritten if the\n   * `NoopAnimationsModule` is being used.\n   */\n  @Input('matRippleAnimation') animation: RippleAnimationConfig;\n\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  @Input('matRippleDisabled')\n  get disabled() { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _disabled: boolean = false;\n\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n  @Input('matRippleTrigger')\n  get trigger() { return this._trigger || this._elementRef.nativeElement; }\n  set trigger(trigger: HTMLElement) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _trigger: HTMLElement;\n\n  /** Renderer for the ripple DOM manipulations. */\n  private _rippleRenderer: RippleRenderer;\n\n  /** Options that are set globally for all ripples. */\n  private _globalOptions: RippleGlobalOptions;\n\n  /** Whether ripple directive is initialized and the input bindings are set. */\n  private _isInitialized: boolean = false;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n\n    if (animationMode === 'NoopAnimations') {\n      this._globalOptions.animation = {enterDuration: 0, exitDuration: 0};\n    }\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n\n  /**\n   * Ripple configuration from the directive's input values.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: {...this._globalOptions.animation, ...this.animation},\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n      speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n    };\n  }\n\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n\n  /** Sets up the the trigger event listeners if ripples are enabled. */\n  private _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n\n  /**\n   * Launches a manual ripple using the specified ripple configuration.\n   * @param config Configuration for the manual ripple.\n   */\n  launch(config: RippleConfig): RippleRef;\n\n  /**\n   * Launches a manual ripple at the specified coordinates within the element.\n   * @param x Coordinate within the element, along the X axis at which to fade-in the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to fade-in the ripple.\n   * @param config Optional ripple configuration for the manual ripple.\n   */\n  launch(x: number, y: number, config?: RippleConfig): RippleRef;\n\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n  launch(configOrX: number | RippleConfig, y: number = 0, config?: RippleConfig): RippleRef {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, {...this.rippleConfig, ...config});\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, {...this.rippleConfig, ...configOrX});\n    }\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {MatRipple} from './ripple';\n\nexport * from './ripple';\nexport * from './ripple-ref';\nexport * from './ripple-renderer';\n\n@NgModule({\n  imports: [MatCommonModule, PlatformModule],\n  exports: [MatRipple, MatCommonModule],\n  declarations: [MatRipple],\n})\nexport class MatRippleModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  Input,\n  ChangeDetectionStrategy,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/**\n * Possible states for a pseudo checkbox.\n * @docs-private\n */\nexport type MatPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'mat-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.css'],\n  template: '',\n  host: {\n    'class': 'mat-pseudo-checkbox',\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n})\nexport class MatPseudoCheckbox {\n  /** Display state of the checkbox. */\n  @Input() state: MatPseudoCheckboxState = 'unchecked';\n\n  /** Whether the checkbox is disabled. */\n  @Input() disabled: boolean = false;\n\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n  exports: [MatPseudoCheckbox],\n  declarations: [MatPseudoCheckbox]\n})\nexport class MatPseudoCheckboxModule { }\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '../common-behaviors/disabled';\n\n\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nexport class MatOptgroupBase { }\nexport const _MatOptgroupMixinBase: CanDisableCtor & typeof MatOptgroupBase =\n    mixinDisabled(MatOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mat-option`.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-optgroup',\n  exportAs: 'matOptgroup',\n  templateUrl: 'optgroup.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  styleUrls: ['optgroup.css'],\n  host: {\n    'class': 'mat-optgroup',\n    'role': 'group',\n    '[class.mat-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  }\n})\nexport class MatOptgroup extends _MatOptgroupMixinBase implements CanDisable {\n  /** Label for the option group. */\n  @Input() label: string;\n\n  /** Unique id for the underlying label. */\n  _labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatRippleModule} from '../ripple/index';\nimport {MatPseudoCheckboxModule} from '../selection/index';\nimport {MatOption} from './option';\nimport {MatOptgroup} from './optgroup';\n\n\n@NgModule({\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n  exports: [MatOption, MatOptgroup],\n  declarations: [MatOption, MatOptgroup]\n})\nexport class MatOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MAT_LABEL_GLOBAL_OPTIONS =\n  new InjectionToken<LabelOptions>('mat-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n  /**\n   * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n   * Default behavior is assumed to be `auto`.\n   */\n  float?: FloatLabelType;\n}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","MATERIAL_SANITY_CHECKS_FACTORY","mixinDisabled","base","_super","class_1","args","_i","arguments","length","_this","apply","_disabled","tslib_1.__extends","defineProperty","value","coerceBooleanProperty","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","classList","remove","add","mixinDisableRipple","_disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","disabled","mixinErrorState","errorState","stateChanges","Subject","updateErrorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","Observable","subscriber","_notifySubscriber","push","_markInitialized","Error","forEach","complete","MAT_DATE_LOCALE_FACTORY","inject","LOCALE_ID","range","valueFunction","valuesArray","Array","i","enforceStyleRecalculation","element","window","getComputedStyle","getPropertyValue","distanceToFurthestCorner","x","y","rect","distX","Math","max","abs","left","right","distY","top","bottom","sqrt","optionsArray","options","toArray","groups","optionGroups","groupCounter","group","optionOffset","optionIndex","optionHeight","currentScrollPosition","panelHeight","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","assign","t","s","n","call","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS","InjectionToken","providedIn","factory","MatCommonModule","_sanityChecksEnabled","_hasDoneGlobalChecks","_hasCheckedHammer","_document","document","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","isDevMode","_isTestEnv","doctype","console","warn","body","testElement","createElement","appendChild","computedStyle","display","removeChild","_checkHammerIsAvailable","type","NgModule","imports","BidiModule","exports","Boolean","decorators","Optional","Inject","MAT_DATE_LOCALE","MAT_DATE_LOCALE_PROVIDER","provide","useExisting","DateAdapter","_localeChanges","deserialize","isDateInstance","isValid","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","DEFAULT_MONTH_NAMES","long","short","narrow","ɵ0","String","DEFAULT_DATE_NAMES","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","NativeDateAdapter","matDateLocale","platform","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf_1","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","getDateNames","dtf_2","day","getDayOfWeekNames","dtf_3","weekday","getYearName","dtf","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","createDate","result","today","parse","format","displayFormat","setFullYear","tslib_1.__assign","toDateString","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","obj","isNaN","getTime","NaN","slice","str","replace","UTC","getHours","getMinutes","getSeconds","getMilliseconds","Injectable","Platform","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","PlatformModule","providers","useClass","NativeDateModule","useValue","MatNativeDateModule","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ErrorStateMatcher","touched","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","commonModule","events","buildHammer","hammer","Hammer","mc","undefined","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","event","threshold","longpress","time","recognizeWith","inheritances","recognizer","item","HammerGestureConfig","Directive","selector","host","class","MatLine","MatLineSetter","_lines","_element","_setLineClass","changes","subscribe","count","_resetClasses","_setClass","className","isAdd","declarations","MatLineModule","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleState","RippleRef","_renderer","config","state","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","RippleRenderer","_target","_ngZone","elementRef","_isPointerDown","_triggerEvents","Map","_activeRipples","Set","_eventOptions","supportsPassiveEventListeners","passive","onMousedown","isFakeMousedown","isFakeMousedownFromScreenReader","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","onTouchStart","touches","changedTouches","onPointerUp","ripple","isVisible","terminateOnPointerUp","persistent","isBrowser","_containerElement","set","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","width","height","radius","offsetX","offsetY","duration","speedFactor","backgroundColor","transitionDuration","transform","rippleRef","_mostRecentTransientRipple","runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","delete","size","rippleEl","opacity","fadeOutAll","setupTriggerEvents","_triggerElement","_removeTriggerEvents","runOutsideAngular","fn","addEventListener","delay","setTimeout","removeEventListener","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","_trigger","trigger","ngOnInit","ngOnDestroy","baseSpeedFactor","launch","configOrX","exportAs","[class.mat-ripple-unbounded]","ElementRef","NgZone","ANIMATION_MODULE_TYPE","Input","unbounded","MatRippleModule","MatPseudoCheckbox","_animationMode","Component","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","styles","template","[class.mat-pseudo-checkbox-indeterminate]","[class.mat-pseudo-checkbox-checked]","[class.mat-pseudo-checkbox-disabled]","[class._mat-animation-noopable]","propDecorators","MatPseudoCheckboxModule","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_labelId","MatOptgroup","inputs","role","[class.mat-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","MAT_OPTION_PARENT_COMPONENT","MatOption","_changeDetectorRef","_parent","_selected","_active","_mostRecentViewValue","id","onSelectionChange","EventEmitter","_stateChanges","multiple","disableRipple","_getHostElement","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","setActiveStyles","setInactiveStyles","getLabel","viewValue","_handleKeydown","keyCode","ENTER","SPACE","_selectViaInteraction","preventDefault","_getTabIndex","ngAfterViewChecked","emit","[attr.tabindex]","[class.mat-selected]","[class.mat-option-multiple]","[class.mat-active]","[id]","[attr.aria-selected]","[class.mat-option-disabled]","(click)","(keydown)","Output","CommonModule","MatOptionModule","MAT_LABEL_GLOBAL_OPTIONS"],"mappings":"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"}