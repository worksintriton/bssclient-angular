{"version":3,"file":"material-tooltip.umd.min.js","sources":["../../src/lib/tooltip/tooltip.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/tooltip/tooltip-animations.ts","../../src/lib/tooltip/tooltip-module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationEvent} from '@angular/animations';\nimport {AriaDescriber, FocusMonitor} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\nimport {\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConnectionPosition,\n  OverlayRef,\n  ScrollDispatcher,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport {Platform} from '@angular/cdk/platform';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Subject, Observable} from 'rxjs';\nimport {matTooltipAnimations} from './tooltip-animations';\n\n\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\n/** Time in ms to throttle repositioning after scroll events. */\nexport const SCROLL_THROTTLE_MS = 20;\n\n/** CSS class that will be attached to the overlay panel. */\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nexport function getMatTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition({scrollThrottle: SCROLL_THROTTLE_MS});\n}\n\n/** @docs-private */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n\n/** Default `matTooltip` options that can be overridden. */\nexport interface MatTooltipDefaultOptions {\n  showDelay: number;\n  hideDelay: number;\n  touchendHideDelay: number;\n}\n\n/** Injection token to be used to override the default options for `matTooltip`. */\nexport const MAT_TOOLTIP_DEFAULT_OPTIONS =\n    new InjectionToken<MatTooltipDefaultOptions>('mat-tooltip-default-options', {\n      providedIn: 'root',\n      factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY(): MatTooltipDefaultOptions {\n  return {\n    showDelay: 0,\n    hideDelay: 0,\n    touchendHideDelay: 1500,\n  };\n}\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\n@Directive({\n  selector: '[matTooltip]',\n  exportAs: 'matTooltip',\n  host: {\n    '(longpress)': 'show()',\n    '(keydown)': '_handleKeydown($event)',\n    '(touchend)': '_handleTouchend()',\n  },\n})\nexport class MatTooltip implements OnDestroy {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: TooltipComponent | null;\n\n  private _portal: ComponentPortal<TooltipComponent>;\n  private _position: TooltipPosition = 'below';\n  private _disabled: boolean = false;\n  private _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('matTooltipPosition')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      if (this._overlayRef) {\n        this._updatePosition();\n\n        if (this._tooltipInstance) {\n          this._tooltipInstance!.show(0);\n        }\n\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n\n  /** Disables the display of the tooltip. */\n  @Input('matTooltipDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('matTooltipShowDelay') showDelay = this._defaultOptions.showDelay;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('matTooltipHideDelay') hideDelay = this._defaultOptions.hideDelay;\n\n  private _message = '';\n\n  /** The message to be displayed in the tooltip */\n  @Input('matTooltip')\n  get message() { return this._message; }\n  set message(value: string) {\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    this._message = value != null ? `${value}`.trim() : '';\n\n    if (!this._message && this._isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this._updateTooltipMessage();\n      this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n    }\n  }\n\n  /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n  @Input('matTooltipClass')\n  get tooltipClass() { return this._tooltipClass; }\n  set tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\n    this._tooltipClass = value;\n    if (this._tooltipInstance) {\n      this._setTooltipClass(this._tooltipClass);\n    }\n  }\n\n  private _manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n    private _ngZone: NgZone,\n    private _platform: Platform,\n    private _ariaDescriber: AriaDescriber,\n    private _focusMonitor: FocusMonitor,\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n    @Optional() private _dir: Directionality,\n    @Optional() @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)\n      private _defaultOptions: MatTooltipDefaultOptions) {\n\n    const element: HTMLElement = _elementRef.nativeElement;\n\n    // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n    // first tap from firing its click event or can cause the tooltip to open for clicks.\n    if (!_platform.IOS && !_platform.ANDROID) {\n      this._manualListeners\n        .set('mouseenter', () => this.show())\n        .set('mouseleave', () => this.hide())\n        .forEach((listener, event) => element.addEventListener(event, listener));\n    }\n\n    if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n      // When we bind a gesture event on an element (in this case `longpress`), HammerJS\n      // will add some inline styles by default, including `user-select: none`. This is\n      // problematic on iOS and in Safari, because it will prevent users from typing in inputs.\n      // Since `user-select: none` is not needed for the `longpress` event and can cause unexpected\n      // behavior for text fields, we always clear the `user-select` to avoid such issues.\n      element.style.webkitUserSelect = element.style.userSelect = element.style.msUserSelect = '';\n    }\n\n    // Hammer applies `-webkit-user-drag: none` on all elements by default,\n    // which breaks the native drag&drop. If the consumer explicitly made\n    // the element draggable, clear the `-webkit-user-drag`.\n    if (element.draggable && element.style['webkitUserDrag'] === 'none') {\n      element.style['webkitUserDrag'] = '';\n    }\n\n    _focusMonitor.monitor(_elementRef).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n      // Note that the focus monitor runs outside the Angular zone.\n      if (!origin) {\n        _ngZone.run(() => this.hide(0));\n      } else if (origin === 'keyboard') {\n        _ngZone.run(() => this.show());\n      }\n    });\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._tooltipInstance = null;\n    }\n\n    // Clean up the event listeners set in the constructor\n    if (!this._platform.IOS) {\n      this._manualListeners.forEach((listener, event) =>\n        this._elementRef.nativeElement.removeEventListener(event, listener));\n\n      this._manualListeners.clear();\n    }\n\n    this._destroyed.next();\n    this._destroyed.complete();\n\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (this.disabled || !this.message) { return; }\n\n    const overlayRef = this._createOverlay();\n\n    this._detach();\n    this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n    this._tooltipInstance = overlayRef.attach(this._portal).instance;\n    this._tooltipInstance.afterHidden()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n    this._setTooltipClass(this._tooltipClass);\n    this._updateTooltipMessage();\n    this._tooltipInstance!.show(delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /** Handles the keydown events on the host element. */\n  _handleKeydown(e: KeyboardEvent) {\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n      e.stopPropagation();\n      this.hide(0);\n    }\n  }\n\n  /** Handles the touchend events on the host element. */\n  _handleTouchend() {\n    this.hide(this._defaultOptions.touchendHideDelay);\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): OverlayRef {\n    if (this._overlayRef) {\n      return this._overlayRef;\n    }\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = this._overlay.position()\n      .flexibleConnectedTo(this._elementRef)\n      .withTransformOriginOn('.mat-tooltip')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8);\n\n    const scrollableAncestors = this._scrollDispatcher\n      .getAncestorScrollContainers(this._elementRef);\n\n    strategy.withScrollableContainers(scrollableAncestors);\n\n    strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      if (this._tooltipInstance) {\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n          // After position changes occur and the overlay is clipped by\n          // a parent scrollable then close the tooltip.\n          this._ngZone.run(() => this.hide(0));\n        }\n      }\n    });\n\n    this._overlayRef = this._overlay.create({\n      direction: this._dir,\n      positionStrategy: strategy,\n      panelClass: TOOLTIP_PANEL_CLASS,\n      scrollStrategy: this._scrollStrategy()\n    });\n\n    this._updatePosition();\n\n    this._overlayRef.detachments()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n\n    return this._overlayRef;\n  }\n\n  /** Detaches the currently-attached tooltip. */\n  private _detach() {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n\n    this._tooltipInstance = null;\n  }\n\n  /** Updates the position of the current tooltip. */\n  private _updatePosition() {\n    const position =\n        this._overlayRef!.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n\n    position.withPositions([\n      {...origin.main, ...overlay.main},\n      {...origin.fallback, ...overlay.fallback}\n    ]);\n  }\n\n  /**\n   * Returns the origin position and a fallback position based on the user's position preference.\n   * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n   */\n  _getOrigin(): {main: OriginConnectionPosition, fallback: OriginConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let originPosition: OriginConnectionPosition;\n\n    if (position == 'above' || position == 'below') {\n      originPosition = {originX: 'center', originY: position == 'above' ? 'top' : 'bottom'};\n    } else if (\n      position == 'before' ||\n      (position == 'left' && isLtr) ||\n      (position == 'right' && !isLtr)) {\n      originPosition = {originX: 'start', originY: 'center'};\n    } else if (\n      position == 'after' ||\n      (position == 'right' && isLtr) ||\n      (position == 'left' && !isLtr)) {\n      originPosition = {originX: 'end', originY: 'center'};\n    } else {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n\n    const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n    return {\n      main: originPosition,\n      fallback: {originX: x, originY: y}\n    };\n  }\n\n  /** Returns the overlay position and a fallback position based on the user's preference */\n  _getOverlayPosition(): {main: OverlayConnectionPosition, fallback: OverlayConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let overlayPosition: OverlayConnectionPosition;\n\n    if (position == 'above') {\n      overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n    } else if (position == 'below') {\n      overlayPosition = {overlayX: 'center', overlayY: 'top'};\n    } else if (\n      position == 'before' ||\n      (position == 'left' && isLtr) ||\n      (position == 'right' && !isLtr)) {\n      overlayPosition = {overlayX: 'end', overlayY: 'center'};\n    } else if (\n      position == 'after' ||\n      (position == 'right' && isLtr) ||\n      (position == 'left' && !isLtr)) {\n      overlayPosition = {overlayX: 'start', overlayY: 'center'};\n    } else {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n\n    const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n    return {\n      main: overlayPosition,\n      fallback: {overlayX: x, overlayY: y}\n    };\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n      this._tooltipInstance._markForCheck();\n\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(\n        take(1),\n        takeUntil(this._destroyed)\n      ).subscribe(() => {\n        if (this._tooltipInstance) {\n          this._overlayRef!.updatePosition();\n        }\n      });\n    }\n  }\n\n  /** Updates the tooltip class */\n  private _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\n\n  /** Inverts an overlay position. */\n  private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n    if (this.position === 'above' || this.position === 'below') {\n      if (y === 'top') {\n        y = 'bottom';\n      } else if (y === 'bottom') {\n        y = 'top';\n      }\n    } else {\n      if (x === 'end') {\n        x = 'start';\n      } else if (x === 'start') {\n        x = 'end';\n      }\n    }\n\n    return {x, y};\n  }\n}\n\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTooltipAnimations.tooltipState],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()',\n    'aria-hidden': 'true',\n  }\n})\nexport class TooltipComponent {\n  /** Message to display in the tooltip */\n  message: string;\n\n  /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\n  tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** The timeout ID of any current timer set to show the tooltip */\n  _showTimeoutId: number;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  _hideTimeoutId: number;\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  _visibility: TooltipVisibility = 'initial';\n\n  /** Whether interactions on the page should close the tooltip */\n  private _closeOnInteraction: boolean = false;\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private readonly _onHide: Subject<any> = new Subject();\n\n  /** Stream that emits whether the user has a handset-sized display.  */\n  _isHandset: Observable<BreakpointState> = this._breakpointObserver.observe(Breakpoints.Handset);\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _breakpointObserver: BreakpointObserver) {}\n\n  /**\n   * Shows the tooltip with an animation originating from the provided origin\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\n  afterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n\n  /** Whether the tooltip is being displayed. */\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n\n  _animationStart() {\n    this._closeOnInteraction = false;\n  }\n\n  _animationDone(event: AnimationEvent): void {\n    const toState = event.toState as TooltipVisibility;\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n\n    if (toState === 'visible' || toState === 'hidden') {\n      this._closeOnInteraction = true;\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.io/design/components/tooltips.html#behavior\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n\n  /**\n   * Marks that the tooltip needs to be checked in the next change detection run.\n   * Mainly used for rendering the initial text before positioning a tooltip, which\n   * can be problematic in components with OnPush change detection.\n   */\n  _markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  keyframes,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/** Animations used by MatTooltip. */\nexport const matTooltipAnimations: {\n  readonly tooltipState: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: trigger('state', [\n    state('initial, void, hidden', style({opacity: 0, transform: 'scale(0)'})),\n    state('visible', style({transform: 'scale(1)'})),\n    transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n      style({opacity: 0, transform: 'scale(0)', offset: 0}),\n      style({opacity: 0.5, transform: 'scale(0.99)', offset: 0.5}),\n      style({opacity: 1, transform: 'scale(1)', offset: 1})\n    ]))),\n    transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({opacity: 0}))),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {\n  MatTooltip,\n  TooltipComponent,\n  MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './tooltip';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    OverlayModule,\n    MatCommonModule,\n  ],\n  exports: [MatTooltip, TooltipComponent, MatCommonModule],\n  declarations: [MatTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n  providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class MatTooltipModule {}\n"],"names":["getMatTooltipInvalidPositionError","position","Error","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","scrollThrottle","SCROLL_THROTTLE_MS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","matTooltipAnimations","tooltipState","trigger","state","style","opacity","transform","transition","animate","keyframes","offset","MAT_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","MAT_TOOLTIP_DEFAULT_OPTIONS","providedIn","factory","MatTooltip","_overlay","_elementRef","_scrollDispatcher","_viewContainerRef","_ngZone","_platform","_ariaDescriber","_focusMonitor","_scrollStrategy","_dir","_defaultOptions","_this","_position","_disabled","_message","_manualListeners","Map","_destroyed","Subject","element","nativeElement","IOS","ANDROID","set","show","hide","forEach","listener","event","addEventListener","nodeName","webkitUserSelect","userSelect","msUserSelect","draggable","monitor","pipe","takeUntil","subscribe","origin","run","defineProperty","value","_overlayRef","_updatePosition","_tooltipInstance","updatePosition","coerceBooleanProperty","removeDescription","trim","_isTooltipVisible","_updateTooltipMessage","describe","message","_tooltipClass","_setTooltipClass","ngOnDestroy","dispose","removeEventListener","clear","next","complete","stopMonitoring","delay","disabled","overlayRef","_createOverlay","_detach","_portal","ComponentPortal","TooltipComponent","attach","instance","afterHidden","toggle","isVisible","_handleKeydown","e","keyCode","ESCAPE","stopPropagation","_handleTouchend","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","change","scrollableViewProperties","isOverlayClipped","create","direction","positionStrategy","panelClass","scrollStrategy","detachments","hasAttached","detach","getConfig","_getOrigin","_getOverlayPosition","withPositions","tslib_1.__assign","main","fallback","originPosition","isLtr","originX","originY","_a","_invertPosition","x","y","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","asObservable","take","tooltipClass","type","Directive","args","selector","exportAs","host","(longpress)","(keydown)","(touchend)","ElementRef","ScrollDispatcher","ViewContainerRef","NgZone","Platform","AriaDescriber","FocusMonitor","undefined","decorators","Inject","Directionality","Optional","Input","_changeDetectorRef","_breakpointObserver","_visibility","_closeOnInteraction","_onHide","_isHandset","observe","Breakpoints","Handset","_hideTimeoutId","clearTimeout","_showTimeoutId","setTimeout","_animationStart","_animationDone","toState","_handleBodyInteraction","markForCheck","Component","template","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","animations","aria-hidden","NgModule","imports","A11yModule","CommonModule","OverlayModule","MatCommonModule","exports","declarations","entryComponents","providers","MatTooltipModule"],"mappings":"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"}