{
  "_args": [
    [
      {
        "raw": "@ngx-translate/http-loader@3.0.1",
        "scope": "@ngx-translate",
        "escapedName": "@ngx-translate%2fhttp-loader",
        "name": "@ngx-translate/http-loader",
        "rawSpec": "3.0.1",
        "spec": "3.0.1",
        "type": "version"
      },
      "/Users/mohammedimthiyas/Desktop/Client"
    ]
  ],
  "_from": "@ngx-translate/http-loader@3.0.1",
  "_id": "@ngx-translate/http-loader@3.0.1",
  "_inCache": true,
  "_location": "/@ngx-translate/http-loader",
  "_nodeVersion": "8.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/http-loader_3.0.1_1522232050613_0.3940862812444792"
  },
  "_npmUser": {
    "name": "ocombe",
    "email": "olivier.combe@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@ngx-translate/http-loader@3.0.1",
    "scope": "@ngx-translate",
    "escapedName": "@ngx-translate%2fhttp-loader",
    "name": "@ngx-translate/http-loader",
    "rawSpec": "3.0.1",
    "spec": "3.0.1",
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@ngx-translate/http-loader/-/http-loader-3.0.1.tgz",
  "_shasum": "20b0f98bc6c25321129d3e3302ab3cc489c0a42a",
  "_shrinkwrap": null,
  "_spec": "@ngx-translate/http-loader@3.0.1",
  "_where": "/Users/mohammedimthiyas/Desktop/Client",
  "author": {
    "name": "Olivier Combe"
  },
  "bugs": {
    "url": "https://github.com/ngx-translate/http-loader/issues"
  },
  "dependencies": {
    "tslib": "^1.9.0"
  },
  "description": "A loader for ngx-translate that loads translations using http",
  "devDependencies": {
    "semantic-release": "8.2.3"
  },
  "directories": {},
  "dist": {
    "shasum": "20b0f98bc6c25321129d3e3302ab3cc489c0a42a",
    "tarball": "https://registry.npmjs.org/@ngx-translate/http-loader/-/http-loader-3.0.1.tgz",
    "fileCount": 15,
    "unpackedSize": 81464
  },
  "es2015": "esm2015/ngx-translate-http-loader.js",
  "gitHead": "b9636aba2f9eb27b5834b444fa724535c9dbe274",
  "homepage": "https://github.com/ngx-translate/http-loader",
  "keywords": [
    "angular",
    "angular 2",
    "i18n",
    "translate",
    "ngx-translate"
  ],
  "license": "MIT",
  "main": "bundles/ngx-translate-http-loader.umd.js",
  "maintainers": [
    {
      "name": "ocombe",
      "email": "olivier.combe@gmail.com"
    }
  ],
  "metadata": "ngx-translate-http-loader.metadata.json",
  "module": "esm5/ngx-translate-http-loader.js",
  "name": "@ngx-translate/http-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "@ngx-translate/core": ">=10.0.0",
    "@angular/core": ">=6.0.0-rc.0",
    "@angular/common": ">=6.0.0-rc.0"
  },
  "readme": "# @ngx-translate/http-loader [![Build Status](https://travis-ci.org/ngx-translate/http-loader.svg?branch=master)](https://travis-ci.org/ngx-translate/http-loader) [![npm version](https://badge.fury.io/js/%40ngx-translate%2Fhttp-loader.svg)](https://badge.fury.io/js/%40ngx-translate%2Fhttp-loader)\n\nA loader for [ngx-translate](https://github.com/ngx-translate/core) that loads translations using http.\n\nGet the complete changelog here: https://github.com/ngx-translate/http-loader/releases\n\n* [Installation](#installation)\n* [Usage](#usage)\n\n## Installation\n\nWe assume that you already installed [ngx-translate](https://github.com/ngx-translate/core).\n\nNow you need to install the npm module for `TranslateHttpLoader`:\n\n```sh\nnpm install @ngx-translate/http-loader --save\n```\n\n**if you're still on Angular <4.3, please use Http from @angular/http with http-loader@0.1.0.**\n\n**If you're still using Angular v5, please use ngx-translate 9.x and http-loader 2.x, version 3 and above are only compatible with Angular v6. If you need to use RxJS 5, update to 5.6 and use the rxjs-compat library (see [the RxJS update guide](https://docs.google.com/document/d/12nlLt71VLKb-z3YaSGzUfx6mJbc34nsMXtByPUN35cg/preview#)).**\n\n## Usage\n#### 1. Setup the `TranslateModule` to use the `TranslateHttpLoader`:\n\nThe `TranslateHttpLoader` uses HttpClient to load translations, which means that you have to import the HttpClientModule from `@angular/common/http` before the `TranslateModule`:\n\n```ts\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {HttpClientModule, HttpClient} from '@angular/common/http';\nimport {TranslateModule, TranslateLoader} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {AppComponent} from \"./app\";\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            }\n        })\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```\n\nThe `TranslateHttpLoader` also has two optional parameters:\n- prefix: string = \"/assets/i18n/\"\n- suffix: string = \".json\"\n\nBy using those default parameters, it will load your translations files for the lang \"en\" from: `/assets/i18n/en.json`.\n\nYou can change those in the `HttpLoaderFactory` method that we just defined. For example if you want to load the \"en\" translations from `/public/lang-files/en-lang.json` you would use:\n\n```ts\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, \"/public/lang-files/\", \"-lang.json\");\n}\n```\n\nFor now this loader only support the json format.\n\n## Angular CLI/Webpack TranslateLoader Example\nIf you are using Angular CLI (uses webpack under the hood) you can write your own `TranslateLoader` that always loads the latest translation file available during your application build.\n\n```typescript\n// webpack-translate-loader.ts\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable } from 'rxjs/Observable';\n\nexport class WebpackTranslateLoader implements TranslateLoader {\n  getTranslation(lang: string): Observable<any> {\n    return Observable.fromPromise(System.import(`../assets/i18n/${lang}.json`));\n  }\n}\n```\n\nCause `System` will not be available you need to add it to your custom `typings.d.ts`:\n```typescript\ndeclare var System: System;\ninterface System {\n  import(request: string): Promise<any>;\n}\n```\n\nNow you can use the `WebpackTranslateLoader` with your `app.module`:\n```typescript\n@NgModule({\n  bootstrap: [AppComponent],\n  imports: [\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useClass: WebpackTranslateLoader\n      }\n    })\n  ]\n})\nexport class AppModule { }\n```\n\nThe disadvantage of this solution is that you have to rebuild the application everytime your translate files has changes.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ngx-translate/http-loader.git"
  },
  "scripts": {
    "semantic-release": "semantic-release pre && npm publish && semantic-release post"
  },
  "typings": "ngx-translate-http-loader.d.ts",
  "version": "3.0.1"
}
