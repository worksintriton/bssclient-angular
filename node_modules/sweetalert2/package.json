{
  "_args": [
    [
      {
        "raw": "sweetalert2@^6.6.4",
        "scope": null,
        "escapedName": "sweetalert2",
        "name": "sweetalert2",
        "rawSpec": "^6.6.4",
        "spec": ">=6.6.4 <7.0.0",
        "type": "range"
      },
      "/Users/mohammedimthiyas/Desktop/Client/node_modules/alert-service"
    ]
  ],
  "_from": "sweetalert2@>=6.6.4 <7.0.0",
  "_id": "sweetalert2@6.11.5",
  "_inCache": true,
  "_location": "/sweetalert2",
  "_nodeVersion": "8.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sweetalert2-6.11.5.tgz_1510229121948_0.3945838192012161"
  },
  "_npmUser": {
    "name": "limonte",
    "email": "limon.monte@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sweetalert2@^6.6.4",
    "scope": null,
    "escapedName": "sweetalert2",
    "name": "sweetalert2",
    "rawSpec": "^6.6.4",
    "spec": ">=6.6.4 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/alert-service"
  ],
  "_resolved": "https://registry.npmjs.org/sweetalert2/-/sweetalert2-6.11.5.tgz",
  "_shasum": "a1ede34089225eb864898f4b613db4fec5dbe334",
  "_shrinkwrap": null,
  "_spec": "sweetalert2@^6.6.4",
  "_where": "/Users/mohammedimthiyas/Desktop/Client/node_modules/alert-service",
  "author": {
    "name": "Limon Monte",
    "email": "limon.monte@gmail.com",
    "url": "https://limonte.github.io"
  },
  "bugs": {
    "url": "https://github.com/limonte/sweetalert2/issues"
  },
  "contributors": [
    {
      "name": "Morgan Touverey-Quilling",
      "email": "mtouverey@alembic-dev.com",
      "url": "https://github.com/toverux"
    },
    {
      "name": "Johan Fagerberg",
      "url": "https://github.com/birjolaxew"
    },
    {
      "name": "Sam Turrell",
      "email": "sam@samturrell.co.uk",
      "url": "https://github.com/samturrell"
    },
    {
      "name": "Joseph Schultz",
      "url": "https://github.com/acupajoe"
    },
    {
      "name": "Patrick H. Lauke",
      "url": "https://github.com/patrickhlauke"
    }
  ],
  "dependencies": {},
  "description": "A beautiful, responsive, customizable and accessible (WAI-ARIA) replacement for JavaScript's popup boxes, supported fork of sweetalert",
  "devDependencies": {
    "babel-core": "latest",
    "babel-plugin-array-includes": "latest",
    "babel-plugin-external-helpers": "latest",
    "babel-plugin-transform-object-assign": "latest",
    "babel-preset-es2015": "latest",
    "gulp": "latest",
    "gulp-autoprefixer": "latest",
    "gulp-clean-css": "^3.9.0",
    "gulp-rename": "latest",
    "gulp-rollup": "latest",
    "gulp-sass": "latest",
    "gulp-sass-lint": "latest",
    "gulp-standard": "^8.0.0",
    "gulp-tslint": "^8.1.2",
    "gulp-typescript": "^3.2.3",
    "gulp-uglify": "latest",
    "rollup": "^0.51.1",
    "rollup-plugin-babel": "^3.0.2",
    "rollup-plugin-css-only": "^0.2.0",
    "standard": "^8.0.0",
    "testem": "latest",
    "tslint": "^5.8.0",
    "typescript": "^2.5.3",
    "uglify-js": "^3.1.8"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-8Otu1SlWGS/u3e31cOg+uqrwyoQbByEScKp7UupmCfwEZE9St3coO1e6CXv83YzZtzdDgowdK1hBPKPW7SRp4Q==",
    "shasum": "a1ede34089225eb864898f4b613db4fec5dbe334",
    "tarball": "https://registry.npmjs.org/sweetalert2/-/sweetalert2-6.11.5.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "dist",
    "src",
    "sweetalert2.d.ts"
  ],
  "gitHead": "a72affd8f0fb3d4fb89c75d1973c50ef961941cc",
  "homepage": "https://limonte.github.io/sweetalert2/",
  "jsnext:main": "src/sweetalert2.js",
  "keywords": [
    "sweetalert",
    "sweetalert2",
    "alert",
    "prompt"
  ],
  "license": "MIT",
  "main": "dist/sweetalert2.js",
  "maintainers": [
    {
      "name": "birjolaxew",
      "email": "johanringmann@gmail.com"
    },
    {
      "name": "jdcrensh",
      "email": "jdcrensh@gmail.com"
    },
    {
      "name": "limonte",
      "email": "limon.monte@gmail.com"
    },
    {
      "name": "samturrell",
      "email": "sam@samturrell.co.uk"
    },
    {
      "name": "toverux",
      "email": "mtouverey@methodinthemadness.eu"
    }
  ],
  "name": "sweetalert2",
  "optionalDependencies": {},
  "readme": "SweetAlert2\n-----------\n\n[![Build Status](https://travis-ci.org/limonte/sweetalert2.svg?branch=master)](https://travis-ci.org/limonte/sweetalert2)\n[![Version](https://img.shields.io/npm/v/sweetalert2.svg)](https://www.npmjs.com/package/sweetalert2)\n[![Standard - JavaScript Style Guide](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/limonte/sweetalert2.svg)](http://isitmaintained.com/project/limonte/sweetalert2 \"Average time to resolve an issue\")\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/sweetalert2/Lobby)\n[![Support me on Patreon](http://ionicabizau.github.io/badges/patreon.svg)](https://www.patreon.com/limonte)\n[![PayPal Donate](http://ionicabizau.github.io/badges/paypal.svg)](https://www.paypal.me/limonte/5eur)\n\nA beautiful, responsive, customizable, accessible (WAI-ARIA) replacement for JavaScript's popup boxes. Zero dependencies.\n\nWhat's the difference between SweetAlert and SweetAlert2?\n---------------------------------------------------------\n\n - [Reason of creating this fork is inactivity of original SweetAlert plugin](http://stackoverflow.com/a/27842854/1331425)\n - [SweetAlert 1.x to SweetAlert2 migration guide](https://github.com/limonte/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2)\n\nSweetAlert2 is already more popular than original SweetAlert:\n\n| SweetAlert | SweetAlert2 |\n|------------|-------------|\n| [![](https://img.shields.io/npm/dm/sweetalert.svg)](https://npm-stat.com/charts.html?package=sweetalert) | [![](https://img.shields.io/npm/dm/sweetalert2.svg)](https://npm-stat.com/charts.html?package=sweetalert2) |\n\nYou'll get much better support and developer experience (DX) by using SweetAlert2.\n\n---\n\n[See SweetAlert2 in action!](https://limonte.github.io/sweetalert2/)\n\n<img src=\"https://raw.github.com/limonte/sweetalert2/master/assets/sweetalert2.gif\" width=\"686\">\n\n\nInstallation\n------------\n\n```bash\nnpm install --save sweetalert2\n```\n\nOr:\n\n```bash\nbower install --save sweetalert2\n```\n\nOr download from CDN: [cdnjs.com/limonte-sweetalert2](https://cdnjs.com/libraries/limonte-sweetalert2)\n\n\nUsage\n-----\n\n```html\n<script src=\"bower_components/sweetalert2/dist/sweetalert2.all.min.js\"></script>\n\n<!-- Include a polyfill for ES6 Promises (optional) for IE11, UC Browser and Android browser support -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.js\"></script>\n```\n\nYou can also include the stylesheet separately if desired:\n\n```html\n<script src=\"bower_components/sweetalert2/dist/sweetalert2.min.js\"></script>\n<link rel=\"stylesheet\" href=\"bower_components/sweetalert2/dist/sweetalert2.min.css\">\n```\n\nOr:\n\n```js\n// ES6 Modules or TypeScript\nimport swal from 'sweetalert2'\n\n// CommonJS\nconst swal = require('sweetalert2')\n```\n\nPlease note that TypeScript is supported, so you don't have to install a third-party declaration file.\n\n\nExamples\n--------\n\nThe most basic message:\n\n```js\nswal('Hello world!')\n```\n\nA message signaling an error:\n\n```js\nswal('Oops...', 'Something went wrong!', 'error')\n```\n\nHandling the result of SweetAlert2 modal:\n\n```js\nswal({\n  title: 'Are you sure?',\n  text: 'You will not be able to recover this imaginary file!',\n  type: 'warning',\n  showCancelButton: true,\n  confirmButtonText: 'Yes, delete it!',\n  cancelButtonText: 'No, keep it'\n}).then(function() {\n  swal(\n    'Deleted!',\n    'Your imaginary file has been deleted.',\n    'success'\n  )\n}, function(dismiss) {\n  // dismiss can be 'overlay', 'cancel', 'close', 'esc', 'timer'\n  if (dismiss === 'cancel') {\n    swal(\n      'Cancelled',\n      'Your imaginary file is safe :)',\n      'error'\n    )\n  }\n})\n```\n\n[View more examples](https://limonte.github.io/sweetalert2/)\n\n\nHandling Dismissals\n-------------------\n\nWhen an alert is dismissed by the user, the Promise returned by `swal()` will reject with a string documenting the reason it was dismissed:\n\n| String      | Description                                             | Related configuration |\n| ----------- | ------------------------------------------------------- | --------------------- |\n| `'overlay'` | The user clicked the overlay.                           | `allowOutsideClick`   |\n| `'cancel'`  | The user clicked the cancel button.                     | `showCancelButton`    |\n| `'close'`   | The user clicked the close button.                      | `showCloseButton`     |\n| `'esc'`     | The user pressed the <kbd>Esc</kbd> key.                | `allowEscapeKey`      |\n| `'timer'`   | The timer ran out, and the alert closed automatically.  | `timer`               |\n\nIf rejections are not handled, it will be logged as an error. To avoid this, add a rejection handler to the Promise. Alternatively, you can use `.catch(swal.noop)` as a quick way to simply suppress the errors:\n\n```js\nswal(...)\n  .catch(swal.noop)\n```\n\nModal Types\n-----------\n\n| `success`                                                                       | `error`                                                                       | `warning`                                                                       | `info`                                                                       | `question`                                                                       |\n| ------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- | ------------------------------------------------------------------------------- | ---------------------------------------------------------------------------- | -------------------------------------------------------------------------------- |\n| ![](https://raw.github.com/limonte/sweetalert2/master/assets/swal2-success.png) | ![](https://raw.github.com/limonte/sweetalert2/master/assets/swal2-error.png) | ![](https://raw.github.com/limonte/sweetalert2/master/assets/swal2-warning.png) | ![](https://raw.github.com/limonte/sweetalert2/master/assets/swal2-info.png) | ![](https://raw.github.com/limonte/sweetalert2/master/assets/swal2-question.png) |\n\n\nConfiguration\n-------------\n\n| Argument                 | Default value         | Description |\n| ------------------------ | --------------------- | ----------- |\n| `title`                  | `null`                | The title of the modal, as HTML. It can either be added to the object under the key \"title\" or passed as the first parameter of the function. |\n| `titleText`              | `null`                | The title of the modal, as text. Useful to avoid HTML injection. |\n| `text`                   | `null`                | A description for the modal. It can either be added to the object under the key \"text\" or passed as the second parameter of the function. |\n| `html`                   | `null`                | A HTML description for the modal. If `text` and `html` parameters are provided in the same time, \"text\" will be used. |\n| `type`                   | `null`                | The type of the modal. SweetAlert2 comes with [5 built-in types](#modal-types) which will show a corresponding icon animation: `warning`, `error`, `success`, `info` and `question`. It can either be put in the array under the key `type` or passed as the third parameter of the function. |\n| `target`                 | `'body'`              | The container element for adding modal into. |\n| `input`                  | `null`                | Input field type, can be `'text'`, `'email'`, `'password'`, `'number'`, `'tel'`, `'range'`, `'textarea'`, `'select'`, `'radio'`, `'checkbox'`, `'file'` and `'url'`. |\n| `width`                  | `'500px'`             | Modal window width, including paddings (`box-sizing: border-box`). Can be in `px` or `%`. |\n| `padding`                | `20`                  | Modal window padding. |\n| `background`             | `'#fff'`              | Modal window background (CSS `background` property). |\n| `position`               | `'center'`            | Modal window position, can be `'top'`, `'top-left'`, `'top-right'`, `'center'`, `'center-left'`, `'center-right'`, `'bottom'`, `'bottom-left'`, or `'bottom-right'`.  |\n| `grow`                   | `false`               | Paired with window position, sets the direction the modal should grow in, can be set to `'row'`, `'column'`, `'fullscreen'`, or `false`. |\n| `customClass`            | `null`                | A custom CSS class for the modal. |\n| `timer`                  | `null`                | Auto close timer of the modal. Set in ms (milliseconds). |\n| `animation`              | `true`                | If set to `false`, modal CSS animation will be disabled. |\n| `allowOutsideClick`      | `true`                | If set to `false`, the user can't dismiss the modal by clicking outside it. |\n| `allowEscapeKey`         | `true`                | If set to `false`, the user can't dismiss the modal by pressing the <kbd>Esc</kbd> key. |\n| `allowEnterKey`          | `true`                | If set to `false`, the user can't confirm the modal by pressing the <kbd>Enter</kbd> or <kbd>Space</kbd> keys, unless they manually focus the confirm button. |\n| `showConfirmButton`      | `true`                | If set to `false`, a \"Confirm\"-button will not be shown. It can be useful when you're using `html` parameter for custom HTML description. |\n| `showCancelButton`       | `false`               | If set to `true`, a \"Cancel\"-button will be shown, which the user can click on to dismiss the modal. |\n| `confirmButtonText`      | `'OK'`                | Use this to change the text on the \"Confirm\"-button. |\n| `cancelButtonText`       | `'Cancel'`            | Use this to change the text on the \"Cancel\"-button. |\n| `confirmButtonColor`     | `'#3085d6'`           | Use this to change the background color of the \"Confirm\"-button (must be a HEX value). |\n| `cancelButtonColor`      | `'#aaa'`              | Use this to change the background color of the \"Cancel\"-button (must be a HEX value). |\n| `confirmButtonClass`     | `null`                | A custom CSS class for the \"Confirm\"-button. |\n| `cancelButtonClass`      | `null`                | A custom CSS class for the \"Cancel\"-button. |\n| `confirmButtonAriaLabel` | `''`                  | Use this to change the `aria-label` for the \"Confirm\"-button. |\n| `cancelButtonAriaLabel`  | `''`                  | Use this to change the `aria-label` for the \"Cancel\"-button. |\n| `buttonsStyling`         | `true`                | Apply default styling to buttons. If you want to use your own classes (e.g. Bootstrap classes) set this parameter to `false`. |\n| `reverseButtons`         | `false`               | Set to `true` if you want to invert default buttons positions (\"Confirm\"-button on the right side). |\n| `focusConfirm`           | `true`                | Set to `false` if you want to focus the first element in tab order instead of \"Confirm\"-button by default. |\n| `focusCancel`            | `false`               | Set to `true` if you want to focus the \"Cancel\"-button by default. |\n| `showCloseButton`        | `false`               | Set to `true` to show close button in top right corner of the modal. |\n| `closeButtonAriaLabel`   | `'Close this dialog'` | Use this to change the `aria-label` for the close button. |\n| `showLoaderOnConfirm`    | `false`               | Set to `true` to disable buttons and show that something is loading. Use it in combination with the `preConfirm` parameter. |\n| `preConfirm`             | `null`                | Function to execute before confirm, should return Promise, see <a href=\"https://limonte.github.io/sweetalert2/#ajax-request\">usage example</a>. |\n| `imageUrl`               | `null`                | Add an image for the modal. Should contain a string with the path or URL to the image. |\n| `imageWidth`             | `null`                | If imageUrl is set, you can specify imageWidth to describes image width in px. |\n| `imageHeight`            | `null`                | Custom image height in px. |\n| `imageAlt`               | `''`                  | An alternative text for the custom image icon. |\n| `imageClass`             | `null`                | A custom CSS class for the image. |\n| `inputPlaceholder`       | `''`                  | Input field placeholder. |\n| `inputValue`             | `''`                  | Input field initial value. |\n| `inputOptions`           | `{}` or `Promise`     | If `input` parameter is set to `'select'` or `'radio'`, you can provide options. Object keys will represent options values, object values will represent options text values. |\n| `inputAutoTrim`          | `true`                | Automatically remove whitespaces from both ends of a result string. Set this parameter to `false` to disable auto-trimming. |\n| `inputAttributes`        | `{}`                  | HTML input attributes (e.g. `'min'`, `'max'`, `'autocomplete'`, `'accept'`), that are added to the input field. Object keys will represent attributes names, object values will represent attributes values. |\n| `inputValidator`         | `null`                | Validator for input field, should return Promise, see <a href=\"https://limonte.github.io/sweetalert2/#select-box\">usage example</a>. |\n| `inputClass`             | `null`                | A custom CSS class for the input field. |\n| `progressSteps`          | `[]`                  | Progress steps, useful for modal queues, see <a href=\"https://limonte.github.io/sweetalert2/#chaining-modals\">usage example</a>. |\n| `currentProgressStep`    | `null`                | Current active progress step. The default is `swal.getQueueStep()`. |\n| `progressStepsDistance`  | `'40px'`              | Distance between progress steps. |\n| `onBeforeOpen`           | `null`                | Function to run when modal built, but not shown yet. Provides modal DOM element as the first argument. |\n| `onOpen`                 | `null`                | Function to run when modal opens, provides modal DOM element as the first argument. |\n| `onClose`                | `null`                | Function to run when modal closes, provides modal DOM element as the first argument. |\n| `useRejections`          | `true`                | Determines whether dismissals (outside click, cancel button, close button, esc key) should reject, or resolve with an object of the format `{ dismiss: reason }`. Set it to `false` to get a cleaner control flow when using `await`, as explained in [#485](https://github.com/limonte/sweetalert2/issues/485). |\n\nYou can redefine default params by using `swal.setDefaults(customParams)` where `customParams` is an object.\n\n\nMethods\n-------\n\n| Method                                          | Description |\n| ----------------------------------------------- | ----------- |\n| `swal.isVisible()`                              | Determine if modal is shown. |\n| `swal.setDefaults({Object})`                    | If you end up using a lot of the same settings when calling SweetAlert2, you can use setDefaults at the start of your program to set them once and for all! |\n| `swal.resetDefaults()`                          | Resets settings to their default value. |\n| `swal.close()` or `swal.closeModal()`           | Close the currently open SweetAlert2 modal programmatically. |\n| `swal.getTitle()`                               | Get the modal title. |\n| `swal.getContent()`                             | Get the modal content. |\n| `swal.getImage()`                               | Get the image. |\n| `swal.getConfirmButton()`                       | Get the \"Confirm\" button. |\n| `swal.getCancelButton()`                        | Get the \"Cancel\" button. |\n| `swal.getButtonsWrapper()`                      | Get the buttons wrapper. |\n| `swal.enableButtons()`                          | Enable \"Confirm\" and \"Cancel\" buttons. |\n| `swal.disableButtons()`                         | Disable \"Confirm\" and \"Cancel\" buttons. |\n| `swal.enableConfirmButton()`                    | Enable the \"Confirm\"-button only. |\n| `swal.disableConfirmButton()`                   | Disable the \"Confirm\"-button only. |\n| `swal.enableLoading()` or `swal.showLoading()`  | Disable buttons and show loader. This is useful with AJAX requests. |\n| `swal.disableLoading()` or `swal.hideLoading()` | Enable buttons and hide loader. |\n| `swal.clickConfirm()`                           | Click the \"Confirm\"-button programmatically. |\n| `swal.clickCancel()`                            | Click the \"Cancel\"-button programmatically. |\n| `swal.showValidationError(error)`               | Show validation error message. |\n| `swal.resetValidationError()`                   | Hide validation error message. |\n| `swal.getInput()`                               | Get the input DOM node, this method works with `input` parameter. |\n| `swal.disableInput()`                           | Disable input. A disabled input element is unusable and un-clickable. |\n| `swal.enableInput()`                            | Enable input. |\n| `swal.queue([Array])`                           | Provide array of SweetAlert2 parameters to show multiple modals, one modal after another or a function that returns alert parameters given modal number. See [usage example](https://limonte.github.io/sweetalert2/#chaining-modals).  |\n| `swal.getQueueStep()`                           | Get the index of current modal in queue. When there's no active queue, `null` will be returned. |\n| `swal.insertQueueStep()`                        | Insert a modal to queue, you can specify modal positioning with second parameter. By default a modal will be added to the end of a queue. |\n| `swal.deleteQueueStep(index)`                   | Delete a modal at `index` from queue. |\n| `swal.getProgressSteps()`                       | Progress steps getter. |\n| `swal.setProgressSteps([])`                     | Progress steps setter. |\n| `swal.showProgressSteps()`                      | Show progress steps. |\n| `swal.hideProgressSteps()`                      | Hide progress steps. |\n| `swal.isValidParameter({String})`               | Determine if parameter name is valid. |\n\n\nBrowser compatibility\n---------------------\n\n| IE11* | Edge | Chrome | Firefox | Safari | Opera | Android Browser* | UC Browser* |\n|-------|------|--------|---------|--------|-------|------------------|-------------|\n|  ✅   |   ✅  |   ✅   |     ✅   |   ✅   |    ✅   |        ✅        |      ✅      |\n\n\\* ES6 Promise polyfill should be included, see [usage example](#usage).\n\nNote that SweetAlert2 **does not** and **will not** provide support or functionality of any kind on IE10 and lower.\n\n\nCollaborators\n-------------\n\n| ![](https://avatars1.githubusercontent.com/u/1343250?v=4&s=80) | ![](https://avatars2.githubusercontent.com/u/4542461?v=4&s=80) | ![](https://avatars1.githubusercontent.com/u/5918348?v=4&s=80) | ![](https://avatars3.githubusercontent.com/u/9093699?v=4&s=80) | ![](https://avatars2.githubusercontent.com/u/895831?v=4&s=80) |\n|-|-|-|-|-|\n| [@toverux](https://github.com/toverux) | [@birjolaxew](https://github.com/birjolaxew) | [@samturrell](https://github.com/samturrell) | [@acupajoe](https://github.com/acupajoe) | [@patrickhlauke](https://github.com/patrickhlauke) |\n\n\nContributing\n------------\n\nIf you would like to contribute enhancements or fixes, please do the following:\n\n1. Fork the `sweetalert2` repository and clone it locally.\n\n2. Make sure you have [npm](https://www.npmjs.com/) or [yarn](https://yarnpkg.com/) installed.\n\n3. When in the SweetAlert2 directory, run `npm install` or `yarn install` to install dependencies.\n\n4. Start gulp watcher `gulp watch` to automatically build and minify the SCSS and JS-files.\n\n5. Check that your code is compliant with code linters: `gulp lint`.\n\n6. Ensure that you didn't break any of tests: `npm test`.\n\n7. Make sure that `dist/*` files aren't committed and create a pull request.\n\n\nRelated projects\n----------------\n\n- [toverux/ngsweetalert2](https://github.com/toverux/ngsweetalert2) - Angular 2+ directive\n- [lishengzxc/vue-sweetalert](https://github.com/lishengzxc/vue-sweetalert) - Vue.js plugin\n- [limonte/sweetalert2-polymer](https://github.com/limonte/sweetalert2-polymer) - Polymer wrapper\n- [limonte/sweetalert2-webpack-demo](https://github.com/limonte/sweetalert2-webpack-demo) - webpack demo\n\n\nDonations\n---------\n\nHas SweetAlert2 helped you create an amazing application? You can show your support by making a donation in one of two ways:\n\n- https://www.paypal.me/limonte/5eur\n- https://www.patreon.com/limonte\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/limonte/sweetalert2.git"
  },
  "scripts": {
    "assume-dist-unchanged": "git ls-files dist | tr '\\n' ' ' | xargs git update-index --assume-unchanged",
    "check-dts": "tsc sweetalert2.d.ts && npm run lint-dts",
    "lint-dts": "tslint sweetalert2.d.ts --format verbose",
    "no-assume-dist-unchanged": "git ls-files dist | tr '\\n' ' ' | xargs git update-index --no-assume-unchanged",
    "test": "testem ci"
  },
  "standard": {
    "ignore": [
      "dist/"
    ],
    "global": [
      "MutationObserver"
    ]
  },
  "types": "sweetalert2.d.ts",
  "version": "6.11.5"
}
